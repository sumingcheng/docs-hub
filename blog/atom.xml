<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="atom.xsl"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://sumingcheng.github.io/docs-hub/blog</id>
    <title>Sumingcheng's Document Center Blog</title>
    <updated>2024-12-01T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://sumingcheng.github.io/docs-hub/blog"/>
    <subtitle>Sumingcheng's Document Center Blog</subtitle>
    <icon>https://sumingcheng.github.io/docs-hub/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[Cursor 使用指南配置其他模型永久白嫖方案提示词优化]]></title>
        <id>https://sumingcheng.github.io/docs-hub/blog/cursor-使用指南配置其他模型永久白嫖方案提示词优化</id>
        <link href="https://sumingcheng.github.io/docs-hub/blog/cursor-使用指南配置其他模型永久白嫖方案提示词优化"/>
        <updated>2024-12-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Cursor 下载与安装]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="cursor-下载与安装">Cursor 下载与安装<a href="https://sumingcheng.github.io/docs-hub/blog/cursor-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97%E9%85%8D%E7%BD%AE%E5%85%B6%E4%BB%96%E6%A8%A1%E5%9E%8B%E6%B0%B8%E4%B9%85%E7%99%BD%E5%AB%96%E6%96%B9%E6%A1%88%E6%8F%90%E7%A4%BA%E8%AF%8D%E4%BC%98%E5%8C%96#cursor-%E4%B8%8B%E8%BD%BD%E4%B8%8E%E5%AE%89%E8%A3%85" class="hash-link" aria-label="Cursor 下载与安装的直接链接" title="Cursor 下载与安装的直接链接">​</a></h2>
<p>访问 Cursor <strong>官网</strong> <a href="https://zhuanlan.zhihu.com/p/717659843/www.cursor.com/" target="_blank" rel="noopener noreferrer">https://zhuanlan.zhihu.com/p/717659843/www.cursor.com/</a>,点击 Download 按钮下载适合你操作系统的安装包</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="cursor-为什么比其他的工具好用很多">Cursor 为什么比其他的工具好用很多？<a href="https://sumingcheng.github.io/docs-hub/blog/cursor-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97%E9%85%8D%E7%BD%AE%E5%85%B6%E4%BB%96%E6%A8%A1%E5%9E%8B%E6%B0%B8%E4%B9%85%E7%99%BD%E5%AB%96%E6%96%B9%E6%A1%88%E6%8F%90%E7%A4%BA%E8%AF%8D%E4%BC%98%E5%8C%96#cursor-%E4%B8%BA%E4%BB%80%E4%B9%88%E6%AF%94%E5%85%B6%E4%BB%96%E7%9A%84%E5%B7%A5%E5%85%B7%E5%A5%BD%E7%94%A8%E5%BE%88%E5%A4%9A" class="hash-link" aria-label="Cursor 为什么比其他的工具好用很多？的直接链接" title="Cursor 为什么比其他的工具好用很多？的直接链接">​</a></h2>
<p>可以灵活地根据代码内容组合 prompt</p>
<p>分析当前 tab 中附近的代码</p>
<p>分析用户主动框选的特定代码段</p>
<p>分析用户选择的整个文件中的代码</p>
<p>利用 RAG 将整个工作区的代码向量化，作为分析的上下文</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="使用指南记住两个快捷键">使用指南，记住两个快捷键<a href="https://sumingcheng.github.io/docs-hub/blog/cursor-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97%E9%85%8D%E7%BD%AE%E5%85%B6%E4%BB%96%E6%A8%A1%E5%9E%8B%E6%B0%B8%E4%B9%85%E7%99%BD%E5%AB%96%E6%96%B9%E6%A1%88%E6%8F%90%E7%A4%BA%E8%AF%8D%E4%BC%98%E5%8C%96#%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97%E8%AE%B0%E4%BD%8F%E4%B8%A4%E4%B8%AA%E5%BF%AB%E6%8D%B7%E9%94%AE" class="hash-link" aria-label="使用指南，记住两个快捷键的直接链接" title="使用指南，记住两个快捷键的直接链接">​</a></h2>
<p>Cursor 常用快捷键和 Visual Studio Code 键盘快捷键基本相同。快速上手只需要记住以下快捷键。如果你本身就是 VSCode 用户，记得导入插件和配置</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ctrlk">Ctrl+K<a href="https://sumingcheng.github.io/docs-hub/blog/cursor-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97%E9%85%8D%E7%BD%AE%E5%85%B6%E4%BB%96%E6%A8%A1%E5%9E%8B%E6%B0%B8%E4%B9%85%E7%99%BD%E5%AB%96%E6%96%B9%E6%A1%88%E6%8F%90%E7%A4%BA%E8%AF%8D%E4%BC%98%E5%8C%96#ctrlk" class="hash-link" aria-label="Ctrl+K的直接链接" title="Ctrl+K的直接链接">​</a></h3>
<p>快速让 Cursor 帮你编写你需要的代码，也可以选中代码进行优化</p>
<p><img decoding="async" loading="lazy" alt="f7e74bbf06724d6a8403276777dcdf0c" src="https://sumingcheng.github.io/docs-hub/assets/images/f7e74bbf06724d6a8403276777dcdf0c-010a0d9bae1366cd07c0f419cc9ef9c1.jpg" width="948" height="215" class="img_ev3q"></p>
<p>输入你的编码需求</p>
<p><img decoding="async" loading="lazy" alt="b5a2fa317a1f360ea59cd750925e8a10" src="https://sumingcheng.github.io/docs-hub/assets/images/b5a2fa317a1f360ea59cd750925e8a10-31f95c7a3692a8a2fbe7c5d9dd12262d.jpg" width="1020" height="368" class="img_ev3q"></p>
<p>确认生成的代码</p>
<p><img decoding="async" loading="lazy" alt="9293fc4411cac057b86191f4307dc14e" src="https://sumingcheng.github.io/docs-hub/assets/images/9293fc4411cac057b86191f4307dc14e-9cf21f275da5724f15e9b5c4bfad5fbd.jpg" width="1010" height="469" class="img_ev3q"></p>
<p>这里觉得最有用的功能是这个 Web，可以帮助你联网搜索问题，其他的功能各位可以慢慢感受</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ctrll">Ctrl+L<a href="https://sumingcheng.github.io/docs-hub/blog/cursor-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97%E9%85%8D%E7%BD%AE%E5%85%B6%E4%BB%96%E6%A8%A1%E5%9E%8B%E6%B0%B8%E4%B9%85%E7%99%BD%E5%AB%96%E6%96%B9%E6%A1%88%E6%8F%90%E7%A4%BA%E8%AF%8D%E4%BC%98%E5%8C%96#ctrll" class="hash-link" aria-label="Ctrl+L的直接链接" title="Ctrl+L的直接链接">​</a></h3>
<p>弹出 Chat 聊天框，进行 QA</p>
<p><img decoding="async" loading="lazy" alt="36f54213379c9f1989013ff5593807b8" src="https://sumingcheng.github.io/docs-hub/assets/images/36f54213379c9f1989013ff5593807b8-2d69382ffec7219fc2b62ebcb8d6337a.jpg" width="1440" height="886" class="img_ev3q">## 注意事项</p>
<p>Cursor 强大是因为有 claude 3.5，所以你要么开通 Cursor pro，要么有其他优秀模型的 sk-key</p>
<p>在使用 Cursor 持续居高不下的 CPU 负载，你可能需要去设置里面把 embedding 整个项目关掉，这样会好很多</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="使用其他模型">使用其他模型<a href="https://sumingcheng.github.io/docs-hub/blog/cursor-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97%E9%85%8D%E7%BD%AE%E5%85%B6%E4%BB%96%E6%A8%A1%E5%9E%8B%E6%B0%B8%E4%B9%85%E7%99%BD%E5%AB%96%E6%96%B9%E6%A1%88%E6%8F%90%E7%A4%BA%E8%AF%8D%E4%BC%98%E5%8C%96#%E4%BD%BF%E7%94%A8%E5%85%B6%E4%BB%96%E6%A8%A1%E5%9E%8B" class="hash-link" aria-label="使用其他模型的直接链接" title="使用其他模型的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="deepseek">deepseek<a href="https://sumingcheng.github.io/docs-hub/blog/cursor-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97%E9%85%8D%E7%BD%AE%E5%85%B6%E4%BB%96%E6%A8%A1%E5%9E%8B%E6%B0%B8%E4%B9%85%E7%99%BD%E5%AB%96%E6%96%B9%E6%A1%88%E6%8F%90%E7%A4%BA%E8%AF%8D%E4%BC%98%E5%8C%96#deepseek" class="hash-link" aria-label="deepseek的直接链接" title="deepseek的直�接链接">​</a></h3>
<p>deepseek 注册送一个月 10 元（500 万 tokens)额度，在 cursor 里配置一下，普通编辑需求够用</p>
<p><a href="https://platform.deepseek.com/" target="_blank" rel="noopener noreferrer">https://platform.deepseek.com/</a></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="配置模型和密钥">配置模型和密钥<a href="https://sumingcheng.github.io/docs-hub/blog/cursor-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97%E9%85%8D%E7%BD%AE%E5%85%B6%E4%BB%96%E6%A8%A1%E5%9E%8B%E6%B0%B8%E4%B9%85%E7%99%BD%E5%AB%96%E6%96%B9%E6%A1%88%E6%8F%90%E7%A4%BA%E8%AF%8D%E4%BC%98%E5%8C%96#%E9%85%8D%E7%BD%AE%E6%A8%A1%E5%9E%8B%E5%92%8C%E5%AF%86%E9%92%A5" class="hash-link" aria-label="配置模型和密钥的直接链接" title="配置模型和密钥的直接链接">​</a></h3>
<p><img decoding="async" loading="lazy" alt="462c41a49d56edb3c4595cbf95140281" src="https://sumingcheng.github.io/docs-hub/assets/images/462c41a49d56edb3c4595cbf95140281-f869b1ee36dcd4bbfb8cb563edbd7b48.jpg" width="1440" height="1081" class="img_ev3q"></p>
<p>model: deepseek-ai/DeepSeek-Coder-V2-Instruct 添加完成后记得打开模型后面的开关</p>
<p>base Url : <a href="https://api.siliconflow.cn/v1" target="_blank" rel="noopener noreferrer">https://api.siliconflow.cn/v1</a></p>
<p><img decoding="async" loading="lazy" alt="98bfcbcbbfd6ce04a5a182bb18dbce21" src="https://sumingcheng.github.io/docs-hub/assets/images/98bfcbcbbfd6ce04a5a182bb18dbce21-0a86f992984642edcce735fed53ebeea.jpg" width="1081" height="1000" class="img_ev3q"></p>
<p>日常使用还行，主要是便宜</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="cursor-到期了怎么办">Cursor 到期了怎么办？<a href="https://sumingcheng.github.io/docs-hub/blog/cursor-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97%E9%85%8D%E7%BD%AE%E5%85%B6%E4%BB%96%E6%A8%A1%E5%9E%8B%E6%B0%B8%E4%B9%85%E7%99%BD%E5%AB%96%E6%96%B9%E6%A1%88%E6%8F%90%E7%A4%BA%E8%AF%8D%E4%BC%98%E5%8C%96#cursor-%E5%88%B0%E6%9C%9F%E4%BA%86%E6%80%8E%E4%B9%88%E5%8A%9E" class="hash-link" aria-label="Cursor 到期了怎么办？的直接链接" title="Cursor 到期了怎么办？的直接链接">​</a></h2>
<p>在 Cursor 中退出当前到期账号，谷歌搜索临时邮箱，重新注册登录，原有的 cursor 配置不会被清除，依然保留，白嫖成功~</p>
<p><img decoding="async" loading="lazy" alt="c9665efc8988c063d887d0e183b5a1ad" src="https://sumingcheng.github.io/docs-hub/assets/images/c9665efc8988c063d887d0e183b5a1ad-08076da8e6e2b506d5d0d14afd9678ad.jpg" width="897" height="766" class="img_ev3q">### Cursor 配置提示词</p>
<p>这里有很多参考，你随便选择。<a href="https://cursor.directory/" target="_blank" rel="noopener noreferrer">https://cursor.directory/</a></p>
<p><img decoding="async" loading="lazy" alt="2e0c182049eb46921f821d3d057e192c" src="https://sumingcheng.github.io/docs-hub/assets/images/2e0c182049eb46921f821d3d057e192c-1b87f77b35311f7426fa1959d6cf95c5.jpg" width="1440" height="630" class="img_ev3q"></p>
<p>各位如果有补充的欢迎评论区留言~</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2024-年-12-月-1-日-152329-补充">2024 年 12 月 1 日 15:23:29 补充<a href="https://sumingcheng.github.io/docs-hub/blog/cursor-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97%E9%85%8D%E7%BD%AE%E5%85%B6%E4%BB%96%E6%A8%A1%E5%9E%8B%E6%B0%B8%E4%B9%85%E7%99%BD%E5%AB%96%E6%96%B9%E6%A1%88%E6%8F%90%E7%A4%BA%E8%AF%8D%E4%BC%98%E5%8C%96#2024-%E5%B9%B4-12-%E6%9C%88-1-%E6%97%A5-152329-%E8%A1%A5%E5%85%85" class="hash-link" aria-label="2024 年 12 月 1 日 15:23:29 补充的直接链接" title="2024 年 12 月 1 日 15:23:29 补充的直接链接">​</a></h3>
<p>有很多人私信说邮箱反复更换会被限制，这个没办法，cursor 估计也被撸秃了。建议使用谷歌邮箱或者是微软邮箱。</p>]]></content>
        <author>
            <name>素明诚</name>
            <uri>https://github.com/sumingcheng</uri>
        </author>
        <category label="AI" term="AI"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python 去除文件名称内的特殊字符]]></title>
        <id>https://sumingcheng.github.io/docs-hub/blog/python-去除文件名称内的特殊字符</id>
        <link href="https://sumingcheng.github.io/docs-hub/blog/python-去除文件名称内的特殊字符"/>
        <updated>2024-11-27T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">import os</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import re</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">def sanitize_filename(filename):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    """ 使用'-'替换文件名中的特殊字符和空格 """</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    return re.sub(r'[^\w.-]', '-', filename)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">def rename_files_in_directory(directory):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    """ 遍历目录并重命名文件 """</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    for root, dirs, files in os.walk(directory):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        for filename in files:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            # 生成新文件名</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            new_filename = sanitize_filename(filename)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if new_filename != filename:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                # 构建完整的文件路径</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                original_file_path = os.path.join(root, filename)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                new_file_path = os.path.join(root, new_filename)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                # 重命名文件</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                os.rename(original_file_path, new_file_path)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                print(f"已将文件 {filename} 重命名为 {new_filename}")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">def main():</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    # 获取当前脚本的目录</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    current_directory = os.path.dirname(os.path.abspath(__file__))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    # 开始重命名流程</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    rename_files_in_directory(current_directory)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    print("所有文件处理完毕！")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if __name__ == '__main__':</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    main()</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>素明诚</name>
            <uri>https://github.com/sumingcheng</uri>
        </author>
        <category label="后端" term="后端"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[VS Code 安装使用中文简体插件]]></title>
        <id>https://sumingcheng.github.io/docs-hub/blog/vs-code-安装使用中文简体插件</id>
        <link href="https://sumingcheng.github.io/docs-hub/blog/vs-code-安装使用中文简体插件"/>
        <updated>2024-11-26T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[确认插件安装成功]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="确认插件安装成功">确认插件安装成功<a href="https://sumingcheng.github.io/docs-hub/blog/vs-code-%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%E4%B8%AD%E6%96%87%E7%AE%80%E4%BD%93%E6%8F%92%E4%BB%B6#%E7%A1%AE%E8%AE%A4%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85%E6%88%90%E5%8A%9F" class="hash-link" aria-label="确认插件安装成功的直接链接" title="确认插件安装成功的直接链接">​</a></h2>
<p>确保中文插件已经正确安装。在 VS Code 的扩展视图中搜索“Chinese”（简体中文），检查是否有安装标记。</p>
<p><img decoding="async" loading="lazy" alt="28307fec8661d659ff745848a1da86d9" src="https://sumingcheng.github.io/docs-hub/assets/images/28307fec8661d659ff745848a1da86d9-653d3a04d1dd9aa8e9575548cbddd5f5.jpg" width="543" height="207" class="img_ev3q">## 激活语言包</p>
<p>有时安装语言包后需要重新启动 VS Code 才能生效。尝试关闭并重新启动 VS Code。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="手动设置语言">手动设置语言<a href="https://sumingcheng.github.io/docs-hub/blog/vs-code-%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%E4%B8%AD%E6%96%87%E7%AE%80%E4%BD%93%E6%8F%92%E4%BB%B6#%E6%89%8B%E5%8A%A8%E8%AE%BE%E7%BD%AE%E8%AF%AD%E8%A8%80" class="hash-link" aria-label="手动设置语言的直接链接" title="手动设置语言的直接链接">​</a></h2>
<p>如果自动切换没有生效，你可以手动设置语言。打开命令面板（<code>Ctrl+Shift+P</code>），然后输入 <code>Configure Display Language</code>，选择它。在打开的语言列表中选择中文（简体）<code>zh-cn</code>，然后重启 VS Code。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="检查配置文件">检查配置文件<a href="https://sumingcheng.github.io/docs-hub/blog/vs-code-%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%E4%B8%AD%E6%96%87%E7%AE%80%E4%BD%93%E6%8F%92%E4%BB%B6#%E6%A3%80%E6%9F%A5%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6" class="hash-link" aria-label="检查配置文件的直接链接" title="检查配置文件的直接链接">​</a></h2>
<p>打开 VS Code 的用户设置（<code>文件 &gt; 首选项 &gt; 设置</code> 或使用快捷键 <code>Ctrl+,</code>），在搜索栏输入 <code>locale</code>。检查 "locale": "zh-cn" 是否设置正确。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="重新安装中文插件">重新安装中文插件<a href="https://sumingcheng.github.io/docs-hub/blog/vs-code-%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%E4%B8%AD%E6%96%87%E7%AE%80%E4%BD%93%E6%8F%92%E4%BB%B6#%E9%87%8D%E6%96%B0%E5%AE%89%E8%A3%85%E4%B8%AD%E6%96%87%E6%8F%92%E4%BB%B6" class="hash-link" aria-label="重新安装中文插件的直接链接" title="重新安装中文插件的直接链接">​</a></h2>
<p>如果以上步骤都未能解决问题，尝试卸载中文插件后重启 VS Code，然后重新安装该插件。</p>
<p>通过上述步骤，通常能够解决中文显示问题。如果问题依然存在，可能需要检查是否有其他插件或设置干扰了语言包的正常工作。</p>]]></content>
        <author>
            <name>素明诚</name>
            <uri>https://github.com/sumingcheng</uri>
        </author>
        <category label="开发工具与环境" term="开发工具与环境"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[gitmoji-cli 使用]]></title>
        <id>https://sumingcheng.github.io/docs-hub/blog/gitmoji-cli-使用</id>
        <link href="https://sumingcheng.github.io/docs-hub/blog/gitmoji-cli-使用"/>
        <updated>2024-11-26T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[安装 gitmoji-cli]]></summary>
        <content type="html"><![CDATA[<h3 class="anchor anchorWithStickyNavbar_LWe7" id="安装-gitmoji-cli">安装 gitmoji-cli<a href="https://sumingcheng.github.io/docs-hub/blog/gitmoji-cli-%E4%BD%BF%E7%94%A8#%E5%AE%89%E8%A3%85-gitmoji-cli" class="hash-link" aria-label="安装 gitmoji-cli的直接链接" title="安装 gitmoji-cli的直接链接">​</a></h3>
<p>首先，确保你的计算机上安装了 Node.js 和 npm。然后，通过 npm 安装 <code>gitmoji-cli</code>：</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">npm install -g gitmoji-cli</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="使用-gitmoji-cli">使用 gitmoji-cli<a href="https://sumingcheng.github.io/docs-hub/blog/gitmoji-cli-%E4%BD%BF%E7%94%A8#%E4%BD%BF%E7%94%A8-gitmoji-cli" class="hash-link" aria-label="使用 gitmoji-cli的直接链接" title="使用 gitmoji-cli的直接链接">​</a></h3>
<p>安装完成后，你可以通过以下命令开始使用 <code>gitmoji-cli</code>：</p>
<p><strong>初始化 gitmoji-cli</strong>： 使用命令 <code>gitmoji -i</code> 可以初始化 gitmoji 提交钩子（hook）。这会在你的项目中设置一个自动提示符，当你用 <code>git commit</code> 命令时，它会提示你选择一个 gitmoji。</p>
<p><strong>查看所有可用的 gitmojis</strong>： 执行 <code>gitmoji -l</code> 可以列出所有可用的 gitmojis。这可以帮助你熟悉不同 gitmojis 的用途。</p>
<p><img decoding="async" loading="lazy" alt="9e832bc775e4c368fc130b4129f89edc" src="https://sumingcheng.github.io/docs-hub/assets/images/9e832bc775e4c368fc130b4129f89edc-06fda78c562404218a3b153612e9920c.jpg" width="857" height="308" class="img_ev3q"></p>
<p>选择后提交即可</p>]]></content>
        <author>
            <name>素明诚</name>
            <uri>https://github.com/sumingcheng</uri>
        </author>
        <category label="开发工具与环境" term="开发工具与环境"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[你可以从 docker inspect 获取哪些信息]]></title>
        <id>https://sumingcheng.github.io/docs-hub/blog/你可以从-docker-inspect-获取哪些信息</id>
        <link href="https://sumingcheng.github.io/docs-hub/blog/你可以从-docker-inspect-获取哪些信息"/>
        <updated>2024-11-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[对正在运行的 MySQLdocker inspect 后内容如下]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="对正在运行的-mysqldocker-inspect-后内容如下">对正在运行的 MySQLdocker inspect 后内容如下<a href="https://sumingcheng.github.io/docs-hub/blog/%E4%BD%A0%E5%8F%AF%E4%BB%A5%E4%BB%8E-docker-inspect-%E8%8E%B7%E5%8F%96%E5%93%AA%E4%BA%9B%E4%BF%A1%E6%81%AF#%E5%AF%B9%E6%AD%A3%E5%9C%A8%E8%BF%90%E8%A1%8C%E7%9A%84-mysqldocker-inspect-%E5%90%8E%E5%86%85%E5%AE%B9%E5%A6%82%E4%B8%8B" class="hash-link" aria-label="对正在运行的 MySQLdocker inspect 后内容如下的直接链接" title="对正在运行的 MySQLdocker inspect 后内容如下的直接链接">​</a></h2>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "Id": "92fe41a6dfd5...",  // 容器的唯一标识符</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "Created": "2024-10-09T08:32:41.659Z",  // 容器创建的时间戳</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "Path": "docker-entrypoint.sh",  // 容器启动时执行的脚本</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "Args": ["--default-authentication-plugin=mysql_native_password"],  // 脚本参数</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "State": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "Status": "running",  // 容器当前状态，正在运行</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "Running": true,  // 容器是否在运行</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "Health": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "Status": "healthy",  // 容器健康状态为健康</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "FailingStreak": 0,  // 健康检查失败次数</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "Log": []  // 健康检查日志</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "Image": "mysql:8.0.36",  // 使用的MySQL镜像版本</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "Name": "/mysql_server",  // 容器名称</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "RestartCount": 0,  // 重启次数</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "HostConfig": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "NetworkMode": "mysql_mysql",  // 网络模式</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "PortBindings": {  // 端口绑定配置</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "3306/tcp": [{ "HostIp": "", "HostPort": "3306" }]  // 映射到主机的3306端口</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "RestartPolicy": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "Name": "always"  // 重启策略，始终重启</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "Config": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "Env": [  // 环境变量配置</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "MYSQL_DATABASE=demo",  // 数据库名</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "MYSQL_USER=admin",  // 用户名</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "MYSQL_PASSWORD=123456",  // 用户密码</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "MYSQL_ROOT_PASSWORD=123456"  // 根密码</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            ],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "Cmd": ["--default-authentication-plugin=mysql_native_password"],  // 容器启动命令</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "Healthcheck": {  // 健康检查配置</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "Test": ["CMD", "mysqladmin", "ping", "-h", "localhost"],  // 使用mysqladmin ping测试</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "Interval": 30000000000,  // 检查间隔</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "Retries": 3  // 重试次数</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "NetworkSettings": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "IPAddress": "172.27.0.2",  // 容器分配的IP地址</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "Networks": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "mysql_mysql": {  // 网络配置</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    "IPAddress": "172.27.0.2",  // 网络中的IP地址</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    "Gateway": "172.27.0.1"  // 网关</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>素明诚</name>
            <uri>https://github.com/sumingcheng</uri>
        </author>
        <category label="后端" term="后端"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Web 开发下 MVC 流程]]></title>
        <id>https://sumingcheng.github.io/docs-hub/blog/web-开发下-mvc-流程</id>
        <link href="https://sumingcheng.github.io/docs-hub/blog/web-开发下-mvc-流程"/>
        <updated>2024-11-20T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[流程图]]></summary>
        <content type="html"><![CDATA[<h3 class="anchor anchorWithStickyNavbar_LWe7" id="流程图">流程图<a href="https://sumingcheng.github.io/docs-hub/blog/web-%E5%BC%80%E5%8F%91%E4%B8%8B-mvc-%E6%B5%81%E7%A8%8B#%E6%B5%81%E7%A8%8B%E5%9B%BE" class="hash-link" aria-label="流程图的直接链接" title="流程图的直接链接">​</a></h3>
<p><img decoding="async" loading="lazy" alt="ef754b81052e9cd5cc26059ecbf3b353" src="https://sumingcheng.github.io/docs-hub/assets/images/ef754b81052e9cd5cc26059ecbf3b353-f21efe7f6f815011118434b76362d96b.jpg" width="1440" height="568" class="img_ev3q">### 前端发起请求，传递必要的参数（如用户 ID）</p>
<p><strong>前端</strong>通过浏览器、移动客户端或其他客户端发起 HTTP 请求，通常是 RESTful API 调用（<code>GET</code>、<code>POST</code>等）。例如，前端可能请求一个特定 ID 的用户信息。 请求中可能携带<strong>查询参数</strong>（如分页参数、排序条件、筛选条件等）或<strong>路径参数</strong>（如用户 ID），具体取决于 API 的设计。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="路由层解析请求并将其转发给相应的控制器方法">路由层解析请求并将其转发给相应的控制器方法<a href="https://sumingcheng.github.io/docs-hub/blog/web-%E5%BC%80%E5%8F%91%E4%B8%8B-mvc-%E6%B5%81%E7%A8%8B#%E8%B7%AF%E7%94%B1%E5%B1%82%E8%A7%A3%E6%9E%90%E8%AF%B7%E6%B1%82%E5%B9%B6%E5%B0%86%E5%85%B6%E8%BD%AC%E5%8F%91%E7%BB%99%E7%9B%B8%E5%BA%94%E7%9A%84%E6%8E%A7%E5%88%B6%E5%99%A8%E6%96%B9%E6%B3%95" class="hash-link" aria-label="路由层解析请求并将其转发给相应的控制器方法的直接链接" title="路由层解析请求并将其转发给相应的控制器方法的直接链接">​</a></h3>
<p>**路由层（Router）**负责解析 HTTP 请求并将其转发给相应的控制器方法。路由会根据请求的方法（GET、POST 等）和路径（如<code>/api/user/{id}</code>）来匹配相应的控制器。 在现代 Web 框架（如 Gin、Express、Spring 等）中，路由通常会独立于控制器进行配置，路由管理器会根据 URL 匹配到相应的控制器方法。在某些框架中，路由层和控制器层可能是分开的。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="控制器从请求中提取参数并调��用服务层来获取数据">控制器从请求中提取参数，并调用服务层来获取数据<a href="https://sumingcheng.github.io/docs-hub/blog/web-%E5%BC%80%E5%8F%91%E4%B8%8B-mvc-%E6%B5%81%E7%A8%8B#%E6%8E%A7%E5%88%B6%E5%99%A8%E4%BB%8E%E8%AF%B7%E6%B1%82%E4%B8%AD%E6%8F%90%E5%8F%96%E5%8F%82%E6%95%B0%E5%B9%B6%E8%B0%83%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%B1%82%E6%9D%A5%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE" class="hash-link" aria-label="控制器从请求中提取参数，并调用服务层来获取数据的直接链接" title="控制器从请求中提取参数，并调用服务层来获取数据的直接链接">​</a></h3>
<p>**控制器层（Controller）**负责接收请求并提取必要的参数（如用户 ID、查询条件等）。控制器的主要职责是调度请求，决定需要调用哪个服务层的功能，执行相应的业务操作。 控制器层本身并不包含业务逻辑，所有的业务逻辑应交给服务层处理。控制器将接收到的参数传递给服务层，以获取或处理数据。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="服务层处理业务逻辑并调用数据库通过模型获取数据">服务层处理业务逻辑，并调用数据库（通过模型）获取数据<a href="https://sumingcheng.github.io/docs-hub/blog/web-%E5%BC%80%E5%8F%91%E4%B8%8B-mvc-%E6%B5%81%E7%A8%8B#%E6%9C%8D%E5%8A%A1%E5%B1%82%E5%A4%84%E7%90%86%E4%B8%9A%E5%8A%A1%E9%80%BB%E8%BE%91%E5%B9%B6%E8%B0%83%E7%94%A8%E6%95%B0%E6%8D%AE%E5%BA%93%E9%80%9A%E8%BF%87%E6%A8%A1%E5%9E%8B%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE" class="hash-link" aria-label="服务层处理业务逻辑，并调用数据库（通过模型）获取数据的直接链接" title="服务层处理业务逻辑，并调用数据库（通过模型）获取数据的直接链接">​</a></h3>
<p>**服务层（Service）<strong>专注于处理具体的业务逻辑。在这一步，服务层会执行参数验证、数据计算或其他必要的处理逻辑。 服务层通过</strong>模型层（Model）**来访问数据库或其他持久化存储，获取、插入或更新数据。模型层通常通过 ORM（如 Gorm、Sequelize 等）与数据库进行交互。 服务层还可能包括缓存的读取、日志记录、外部 API 的调用等跨域逻辑。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="数据从数据库返回后服务层将其返回给控制器">数据从数据库返回后，服务层将其返回给控制器<a href="https://sumingcheng.github.io/docs-hub/blog/web-%E5%BC%80%E5%8F%91%E4%B8%8B-mvc-%E6%B5%81%E7%A8%8B#%E6%95%B0%E6%8D%AE%E4%BB%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%94%E5%9B%9E%E5%90%8E%E6%9C%8D%E5%8A%A1%E5%B1%82%E5%B0%86%E5%85%B6%E8%BF%94%E5%9B%9E%E7%BB%99%E6%8E%A7%E5%88%B6%EF%BF%BD%E5%99%A8" class="hash-link" aria-label="数据从数据库返回后，服务层将其返回给控制器的直接链接" title="数据从数据库返回后，服务层将其返回给控制器的直接链接">​</a></h3>
<p>在完成数据库操作后，服务层将返回的数据（通常是对象或结构化数据）传递给控制器层。 服务层通常返回的格式可以是一个模型对象，也可能是经过一定处理后的数据，取决于具体的业务需求。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="控制器使用-dto-将从数据库获取的数据转换为前端需要的格式">控制器使用 DTO 将从数据库获取的数据转换为前端需要的格式<a href="https://sumingcheng.github.io/docs-hub/blog/web-%E5%BC%80%E5%8F%91%E4%B8%8B-mvc-%E6%B5%81%E7%A8%8B#%E6%8E%A7%E5%88%B6%E5%99%A8%E4%BD%BF%E7%94%A8-dto-%E5%B0%86%E4%BB%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E8%8E%B7%E5%8F%96%E7%9A%84%E6%95%B0%E6%8D%AE%E8%BD%AC%E6%8D%A2%E4%B8%BA%E5%89%8D%E7%AB%AF%E9%9C%80%E8%A6%81%E7%9A%84%E6%A0%BC%E5%BC%8F" class="hash-link" aria-label="控制器使用 DTO 将从数据库获取的数据转换为前端需要的格式的直接链接" title="控制器使用 DTO 将从数据库获取的数据转换为前端需要的格式的直接链接">​</a></h3>
<p>控制器层将从服务层获得的<strong>模型数据（Model）<strong>转换为前端所需的格式，通常是通过</strong>DTO（数据传输对象）<strong>来实现。 DTO 用于将数据格式化为 API 所需的标准结构，并去除不必要的字段或敏感数据（如密码、内部 ID 等）。 在一些复杂场景下，控制器也可能使用</strong>ViewModel</strong>，特别是当数据的展示层要求较高时，ViewModel 更多地关注展示层的需要，可能包含计算字段或格式化的结果。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="控制器通过-http-响应将-dto-数据返回给前端">控制器通过 HTTP 响应将 DTO 数据返回给前端<a href="https://sumingcheng.github.io/docs-hub/blog/web-%E5%BC%80%E5%8F%91%E4%B8%8B-mvc-%E6%B5%81%E7%A8%8B#%E6%8E%A7%E5%88%B6%E5%99%A8%E9%80%9A%E8%BF%87-http-%E5%93%8D%E5%BA%94%E5%B0%86-dto-%E6%95%B0%E6%8D%AE%E8%BF%94%E5%9B%9E%E7%BB%99%E5%89%8D%E7%AB%AF" class="hash-link" aria-label="控制器通过 HTTP 响应将 DTO 数据返回给前端的直接链接" title="控制器通过 HTTP 响应将 DTO 数据返回给前端的直接链接">​</a></h3>
<p>控制器将经过 DTO 转换后的数据以<strong>HTTP 响应</strong>的形式返回给前端。响应通常以<strong>JSON</strong>或<strong>XML</strong>格式发送，具体取决于前后端约定。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="前端接收到数据后进行处理并展示给用户">前端接收到数据后进行处理并展示给用户<a href="https://sumingcheng.github.io/docs-hub/blog/web-%E5%BC%80%E5%8F%91%E4%B8%8B-mvc-%E6%B5%81%E7%A8%8B#%E5%89%8D%E7%AB%AF%E6%8E%A5%E6%94%B6%E5%88%B0%E6%95%B0%E6%8D%AE%E5%90%8E%E8%BF%9B%E8%A1%8C%E5%A4%84%E7%90%86%E5%B9%B6%E5%B1%95%E7%A4%BA%E7%BB%99%E7%94%A8%E6%88%B7" class="hash-link" aria-label="前端接收到数据后进行处理并展示给用户的直接链接" title="前端接收到数据后进行处理并展示给用户的直接链接">​</a></h3>
<p><strong>前端</strong>接收到数据后，通过 JavaScript 等前端技术进行展示。通常，前端会基于 API 返回的 JSON 数据动态更新页面内容，使用框架如<strong>React</strong>、<strong>Vue</strong>、<strong>Angular</strong>等来处理数据绑定和 UI 渲染。 前端还可能进行一些额外的数据处理，例如<strong>表单验证</strong>、<strong>UI 更新</strong>或<strong>交互</strong>。在复杂的前端应用中，<strong>状态管理</strong>（如 Redux、Vuex 等）可能会涉及，帮助集中管理应用的状态。</p>]]></content>
        <author>
            <name>素明诚</name>
            <uri>https://github.com/sumingcheng</uri>
        </author>
        <category label="前端" term="前端"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[四种主要RBAC模型]]></title>
        <id>https://sumingcheng.github.io/docs-hub/blog/四种主要rbac模型</id>
        <link href="https://sumingcheng.github.io/docs-hub/blog/四种主要rbac模型"/>
        <updated>2024-11-20T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[角色基于访问控制（RBAC）是一种广泛使用的访问控制机制，它通过将权限与角色关联，而不是直接与单个用户关联，从而简化了权限管理。RBAC 可以根据不同的复杂度分为多个级别，这些级别能够满足不同安全需求的组织。]]></summary>
        <content type="html"><![CDATA[<p>**角色基于访问控制（RBAC）**是一种广泛使用的访问控制机制，它通过将权限与角色关联，而不是直接与单个用户关联，从而简化了权限管理。RBAC 可以根据不同的复杂度分为多个级别，这些级别能够满足不同安全需求的组织。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="rbac0---基础-rbac">RBAC0 - 基础 RBAC<a href="https://sumingcheng.github.io/docs-hub/blog/%E5%9B%9B%E7%A7%8D%E4%B8%BB%E8%A6%81rbac%E6%A8%A1%E5%9E%8B#rbac0---%E5%9F%BA%E7%A1%80-rbac" class="hash-link" aria-label="RBAC0 - 基础 RBAC的直接链接" title="RBAC0 - 基础 RBAC的直接链接">​</a></h3>
<p>RBAC0 是最简单的 RBAC 模型，实现了 RBAC 的核心概念。在这个模型中，系统管理员将权限分配给角色，然后将角色分配给用户。用户通过其角色获得执行特定任务所需的权限。这种模型是 RBAC 的基本形式，适用于访问控制需求相对简单的环境。</p>
<p><img decoding="async" loading="lazy" alt="a4392d47861fbd6e00f579f18fbb776a" src="https://sumingcheng.github.io/docs-hub/assets/images/a4392d47861fbd6e00f579f18fbb776a-684c853ae5be95a230af25da24d62d36.jpg" width="1440" height="1054" class="img_ev3q">### RBAC1 - 具有角色层级的 RBAC</p>
<p>在 RBAC1 模型中，角色之间可以建立层级关系，形成父子角色的结构。子角色继承父角色的所有权限，并且可以拥有特定的附加权限。这种层级结构使得权限管理更加灵活和精细。例如，某个“高级管理员”角色可以包含多个子角色，如“数据库管理员”和“网络管理员”，这些子角色继承“高级管理员”的通用权限，同时也可以有独立的特定权限。</p>
<p><img decoding="async" loading="lazy" alt="105defe386ea88c2e592530d56d791d3" src="https://sumingcheng.github.io/docs-hub/assets/images/105defe386ea88c2e592530d56d791d3-6698f1bbcb9f08817a4c9b8f9f4cc800.jpg" width="1440" height="1054" class="img_ev3q">### RBAC2 - 具有约束的 RBAC</p>
<p>RBAC2 模型在 RBAC 的基础上增加了约束条件，以实现更细粒度的安全控制。这些约束包括角色的互斥性（例如，禁止同一用户同时拥有财务和审计角色），以及基于时间或上下文的约束（例如，某个角色的权限只在特定时间或满足特定条件下有效）。这种模型适用于对安全性有较高要求的环境，能够防止潜在的权限滥用。</p>
<p><img decoding="async" loading="lazy" alt="c7b9fcc50ff2ce7bffff14f525aa6c08" src="https://sumingcheng.github.io/docs-hub/assets/images/c7b9fcc50ff2ce7bffff14f525aa6c08-af570a1fd4f136c0af4aa21c516fbf59.jpg" width="1440" height="1054" class="img_ev3q">### RBAC3 - 综合 RBAC</p>
<p>RBAC3 是最全面的 RBAC 模型，结合了 RBAC1 中的角色层级和 RBAC2 中的约束规则。它提供了完整的访问控制机制，适用于对安全性和权限管理有严格要求的复杂系统。通过同时引入层级结构和约束条件，RBAC3 能够在确保安全性的同时，提供更大的灵活性和可扩展性。</p>
<p><img decoding="async" loading="lazy" alt="33d2fe39f4468487d2229a5b08b33151" src="https://sumingcheng.github.io/docs-hub/assets/images/33d2fe39f4468487d2229a5b08b33151-345479c3929544abc75038e5d2782d95.jpg" width="1440" height="1054" class="img_ev3q"></p>]]></content>
        <author>
            <name>素明诚</name>
            <uri>https://github.com/sumingcheng</uri>
        </author>
        <category label="后端" term="后端"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[导出浏览器 Cookies]]></title>
        <id>https://sumingcheng.github.io/docs-hub/blog/导出浏览器-cookies</id>
        <link href="https://sumingcheng.github.io/docs-hub/blog/导出浏览器-cookies"/>
        <updated>2024-11-18T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[下载 EditThisCookie]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="下载-editthiscookie">下载 EditThisCookie<a href="https://sumingcheng.github.io/docs-hub/blog/%E5%AF%BC%E5%87%BA%E6%B5%8F%E8%A7%88%E5%99%A8-cookies#%E4%B8%8B%E8%BD%BD-editthiscookie" class="hash-link" aria-label="下载 EditThisCookie的直接链接" title="下载 EditThisCookie的直接链接">​</a></h2>
<p><a href="https://wwtl.lanzouv.com/iRbkv2ffpkxg" target="_blank" rel="noopener noreferrer">https://wwtl.lanzouv.com/iRbkv2ffpkxg</a></p>
<p>下载后导入到谷歌浏览器</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="导出">导出<a href="https://sumingcheng.github.io/docs-hub/blog/%E5%AF%BC%E5%87%BA%E6%B5%8F%E8%A7%88%E5%99%A8-cookies#%E5%AF%BC%E5%87%BA" class="hash-link" aria-label="导出的直接链接" title="导出的直接链接">​</a></h2>
<p><img decoding="async" loading="lazy" alt="c4b3b11e6376d4c070ac0d0d58d90b56" src="https://sumingcheng.github.io/docs-hub/assets/images/c4b3b11e6376d4c070ac0d0d58d90b56-4c4d3f15b187f5a0ba140fbc9dca385c.jpg" width="709" height="344" class="img_ev3q"></p>
<p>完事了</p>]]></content>
        <author>
            <name>素明诚</name>
            <uri>https://github.com/sumingcheng</uri>
        </author>
        <category label="前端" term="前端"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[iframe 在同源和跨域的通信方式]]></title>
        <id>https://sumingcheng.github.io/docs-hub/blog/iframe-在同源和跨域的通信方式</id>
        <link href="https://sumingcheng.github.io/docs-hub/blog/iframe-在同源和跨域的通信方式"/>
        <updated>2024-11-13T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[同源]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="同源">同源<a href="https://sumingcheng.github.io/docs-hub/blog/iframe-%E5%9C%A8%E5%90%8C%E6%BA%90%E5%92%8C%E8%B7%A8%E5%9F%9F%E7%9A%84%E9%80%9A%E4%BF%A1%E6%96%B9%E5%BC%8F#%E5%90%8C%E6%BA%90" class="hash-link" aria-label="同源的直接链接" title="同源的直接链接">​</a></h2>
<p>父页面和 <strong>iframe</strong> 可以直接访问对方的 DOM 和 JavaScript 对象。</p>
<p>这种方式简单高效，但需要注意代码的安全性和健壮性，避免产生错误或安全漏洞。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="跨域">跨域<a href="https://sumingcheng.github.io/docs-hub/blog/iframe-%E5%9C%A8%E5%90%8C%E6%BA%90%E5%92%8C%E8%B7%A8%E5%9F%9F%E7%9A%84%E9%80%9A%E4%BF%A1%E6%96%B9%E5%BC%8F#%E8%B7%A8%E5%9F%9F" class="hash-link" aria-label="跨域的直接链接" title="跨域的直接链接">​</a></h2>
<p>由于同源策略的限制，需要使用 <code>window.postMessage()</code> 方法进行通信。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="同源情况下的通信">同源情况下的通信<a href="https://sumingcheng.github.io/docs-hub/blog/iframe-%E5%9C%A8%E5%90%8C%E6%BA%90%E5%92%8C%E8%B7%A8%E5%9F%9F%E7%9A%84%E9%80%9A%E4%BF%A1%E6%96%B9%E5%BC%8F#%E5%90%8C%E6%BA%90%E6%83%85%E5%86%B5%E4%B8%8B%E7%9A%84%E9%80%9A%E4%BF%A1" class="hash-link" aria-label="同源情况下的通信的直接链接" title="同源情况下的通信的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="直接访问-iframe-的内容">直接访问 iframe 的内容<a href="https://sumingcheng.github.io/docs-hub/blog/iframe-%E5%9C%A8%E5%90%8C%E6%BA%90%E5%92%8C%E8%B7%A8%E5%9F%9F%E7%9A%84%E9%80%9A%E4%BF%A1%E6%96%B9%E5%BC%8F#%E7%9B%B4%E6%8E%A5%E8%AE%BF%E9%97%AE-iframe-%E7%9A%84%E5%86%85%E5%AE%B9" class="hash-link" aria-label="直接访问 iframe 的内容的直接链接" title="直接访问 iframe 的内容的直接链接">​</a></h3>
<p><strong>从父页面访问 iframe</strong></p>
<p>父页面可以通过 <strong>iframe</strong> 元素的 <code>contentWindow</code> 或 <code>contentDocument</code> 属性获取 <strong>iframe</strong> 的 <code>window</code> 对象或 <code>document</code> 对象，然后直接访问其 DOM 或 JavaScript 变量。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="从-iframe-访问父页面">从 iframe 访问父页面<a href="https://sumingcheng.github.io/docs-hub/blog/iframe-%E5%9C%A8%E5%90%8C%E6%BA%90%E5%92%8C%E8%B7%A8%E5%9F%9F%E7%9A%84%E9%80%9A%E4%BF%A1%E6%96%B9%E5%BC%8F#%E4%BB%8E-iframe-%E8%AE%BF%E9%97%AE%E7%88%B6%E9%A1%B5%E9%9D%A2" class="hash-link" aria-label="从 iframe 访问父页面的直接链接" title="从 iframe 访问父页面的直接链接">​</a></h3>
<p><strong>iframe</strong> 可以通过 <code>window.parent</code> 访问父页面的 <code>window</code> 对象。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="示例">示例<a href="https://sumingcheng.github.io/docs-hub/blog/iframe-%E5%9C%A8%E5%90%8C%E6%BA%90%E5%92%8C%E8%B7%A8%E5%9F%9F%E7%9A%84%E9%80%9A%E4%BF%A1%E6%96%B9%E5%BC%8F#%E7%A4%BA%E4%BE%8B" class="hash-link" aria-label="示例的直接链接" title="示例的直接链接">​</a></h3>
<p><strong>父页面（parent.html）</strong></p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&lt;!DOCTYPE html&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;html&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;head&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &lt;title&gt;父页面&lt;/title&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/head&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;body&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &lt;h1&gt;父页面&lt;/h1&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &lt;iframe id="myIframe" src="iframe.html"&gt;&lt;/iframe&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &lt;script&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 等待 iframe 加载完成</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    document.getElementById('myIframe').onload = function() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      // 获取 iframe 的 window 对象</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      var iframeWindow = document.getElementById('myIframe').contentWindow;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      // 调用 iframe 中的函数</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      iframeWindow.showMessageFromIframe();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      // 访问 iframe 中的变量</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      console.log('从 iframe 获取的变量：', iframeWindow.iframeVariable);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      // 修改 iframe 中的 DOM 元素</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      var iframeDocument = iframeWindow.document;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      iframeDocument.getElementById('iframeElement').innerText = '父页面修改了 iframe 的内容';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      // 从 iframe 获取输入框的值</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      var inputValue = iframeDocument.getElementById('iframeInput').value;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      console.log('从 iframe 获取的输入框值：', inputValue);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 定义供 iframe 调用的函数</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    function showMessageFromParent() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      alert('这是父页面的消息！');</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &lt;/script&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/body&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/html&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>iframe 页面（iframe.html）</strong></p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&lt;!DOCTYPE html&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;html&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;head&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &lt;title&gt;iframe 页面&lt;/title&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/head&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;body&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &lt;h2&gt;iframe 页面&lt;/h2&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &lt;p id="iframeElement"&gt;这是 iframe 中的段落。&lt;/p&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &lt;input type="text" id="iframeInput" value="iframe 输入框的默认值"&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &lt;script&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 定义变量</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    var iframeVariable = '这是 iframe 中的变量';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 定义函数</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    function showMessageFromIframe() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      alert('这是 iframe 中的消息！');</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 调用父页面的函数</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    window.parent.showMessageFromParent();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 访问父页面的 DOM 元素</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    var parentTitle = window.parent.document.title;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    console.log('父页面的标题是：', parentTitle);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 修改父页面的背景颜色</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    window.parent.document.body.style.backgroundColor = '#f0f8ff';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &lt;/script&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/body&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/html&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>确保 <strong>iframe</strong> 已经加载完成，才能访问其内容。</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="跨域情况下的通信">跨域情况下的通信<a href="https://sumingcheng.github.io/docs-hub/blog/iframe-%E5%9C%A8%E5%90%8C%E6%BA%90%E5%92%8C%E8%B7%A8%E5%9F%9F%E7%9A%84%E9%80%9A%E4%BF%A1%E6%96%B9%E5%BC%8F#%E8%B7%A8%E5%9F%9F%E6%83%85%E5%86%B5%E4%B8%8B%E7%9A%84%E9%80%9A%E4%BF%A1" class="hash-link" aria-label="跨域情况下的通信的直接链接" title="跨域情况下的通信的直接链接">​</a></h2>
<p>当父页面和 <strong>iframe</strong> 来自不同的域名、协议或端口时，浏览器的同源策略将阻止它们直接访问对方的内容。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="使用-postmessage-进行跨域通信">使用 postMessage 进行跨域通信<a href="https://sumingcheng.github.io/docs-hub/blog/iframe-%E5%9C%A8%E5%90%8C%E6%BA%90%E5%92%8C%E8%B7%A8%E5%9F%9F%E7%9A%84%E9%80%9A%E4%BF%A1%E6%96%B9%E5%BC%8F#%E4%BD%BF%E7%94%A8-postmessage-%E8%BF%9B%E8%A1%8C%E8%B7%A8%E5%9F%9F%E9%80%9A%E4%BF%A1" class="hash-link" aria-label="使用 postMessage 进行跨域通信的直接链接" title="使用 postMessage 进行跨域通信的直接链接">​</a></h3>
<p><code>window.postMessage()</code> 方法允许来自不同源的窗口之间安全地进行通信。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="示例-1">示例<a href="https://sumingcheng.github.io/docs-hub/blog/iframe-%E5%9C%A8%E5%90%8C%E6%BA%90%E5%92%8C%E8%B7%A8%E5%9F%9F%E7%9A%84%E9%80%9A%E4%BF%A1%E6%96%B9%E5%BC%8F#%E7%A4%BA%E4%BE%8B-1" class="hash-link" aria-label="示例的直接链接" title="示例的直接链接">​</a></h3>
<p><strong>父页面（parent.html）</strong></p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&lt;!DOCTYPE html&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;html&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;head&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &lt;title&gt;父页面&lt;/title&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/head&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;body&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &lt;h1&gt;父页面&lt;/h1&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &lt;iframe id="myIframe" src="https://otherdomain.com/iframe.html"&gt;&lt;/iframe&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &lt;script&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    var iframe = document.getElementById('myIframe');</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 向 iframe 发送消息</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    iframe.onload = function() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      var message = { type: 'GREETING', text: '你好，iframe！' };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      iframe.contentWindow.postMessage(message, 'https://otherdomain.com');</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 接收来自 iframe 的消息</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    window.addEventListener('message', function(event) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      // 验证消息来源</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      if (event.origin !== 'https://otherdomain.com') {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        console.warn('来自未知来源的消息：', event.origin);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      // 处理消息</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      console.log('收到来自 iframe 的消息：', event.data);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    });</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &lt;/script&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/body&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/html&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>iframe 页面（iframe.html）</strong></p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&lt;!DOCTYPE html&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;html&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;head&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &lt;title&gt;iframe 页面&lt;/title&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/head&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;body&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &lt;h2&gt;iframe 页面&lt;/h2&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &lt;script&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 接收来自父页面的消息</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    window.addEventListener('message', function(event) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      // 验证消息来源</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      if (event.origin !== 'https://parentdomain.com') {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        console.warn('来自未知来源的消息：', event.origin);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      // 处理消息</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      console.log('收到来自父页面的消息：', event.data);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      // 回复父页面</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      var reply = { type: 'RESPONSE', text: '你好，父页面！' };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      event.source.postMessage(reply, event.origin);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    });</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &lt;/script&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/body&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/html&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>在 <code>postMessage</code> 中指定准确的 <code>targetOrigin</code>，不要使用 <code>"*"</code>，以防止消息被发送到不受信任的窗口。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="最佳实践和安全考虑">最佳实践和安全考虑<a href="https://sumingcheng.github.io/docs-hub/blog/iframe-%E5%9C%A8%E5%90%8C%E6%BA%90%E5%92%8C%E8%B7%A8%E5%9F%9F%E7%9A%84%E9%80%9A%E4%BF%A1%E6%96%B9%E5%BC%8F#%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E5%92%8C%E5%AE%89%E5%85%A8%E8%80%83%E8%99%91" class="hash-link" aria-label="最佳实践和安全考虑的直接链接" title="最佳实践和安全考虑的直接链接">​</a></h2>
<p><strong>明确的 <code>targetOrigin</code></strong>：始终在 <code>postMessage</code> 中指定准确的目标源，防止数据泄露。</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">// 不推荐的做法</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">iframe.contentWindow.postMessage(message, '*'); // 可能导致安全风险</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 推荐的做法</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">iframe.contentWindow.postMessage(message, 'https://otherdomain.com');</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>验证 <code>event.origin</code></strong>：在接收消息时，验证消息的来源。</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">window.addEventListener('message', function(event) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  if (event.origin !== 'https://expected-origin.com') {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    console.warn('不可信的消息来源，已忽略。');</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    return;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  // 处理可信的消息</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">});</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>验证消息的数据结构和内容</strong>：确保消息的数据格式符合预期，防止被恶意代码利用。</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">if (typeof event.data !== 'object' || !event.data.type) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  console.warn('消息格式不正确，已忽略。');</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  return;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>素明诚</name>
            <uri>https://github.com/sumingcheng</uri>
        </author>
        <category label="前端" term="前端"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[packagejson 三种类型的依赖]]></title>
        <id>https://sumingcheng.github.io/docs-hub/blog/packagejson-三种类型的依赖</id>
        <link href="https://sumingcheng.github.io/docs-hub/blog/packagejson-三种类型的依赖"/>
        <updated>2024-11-11T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[package.json]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="packagejson">package.json<a href="https://sumingcheng.github.io/docs-hub/blog/packagejson-%E4%B8%89%E7%A7%8D%E7%B1%BB%E5%9E%8B%E7%9A%84%E4%BE%9D%E8%B5%96#packagejson" class="hash-link" aria-label="package.json的直接链接" title="package.json的直接链接">​</a></h2>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "dependencies" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "react" "^18.2.0",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "react-dom" "^18.2.0",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "axios" "^1.2.3"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "devDependencies" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "webpack" "^5.60.0",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "webpack-cli" "^4.9.0",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "babel-loader" "^8.2.3",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "eslint" "^8.0.0",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "style-loader" "^3.3.1",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "css-loader" "^6.7.0"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "peerDependencies" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "react" "^18.0.0"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="dependencies">dependencies<a href="https://sumingcheng.github.io/docs-hub/blog/packagejson-%E4%B8%89%E7%A7%8D%E7%B1%BB%E5%9E%8B%E7%9A%84%E4%BE%9D%E8%B5%96#dependencies" class="hash-link" aria-label="dependencies的直接链接" title="dependencies的直接链接">​</a></h2>
<p><code>dependencies</code> 中列出了项目运行时必需的包。换句话说，这些库是在应用运行时必须存在的。</p>
<p><strong>React</strong> 和 <strong>React-DOM</strong> 是 React 应用的核心库，它们会被安装到 <code>node_modules</code> 中并在应用启动时加载。</p>
<p><strong>Axios</strong> 是一个用于发送 HTTP 请求的库，通常用于与后端 API 进行交互，它也属于运行时所需的依赖。</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">"dependencies" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "react" "^18.2.0",     // React库，应用必须依赖它来构建UI</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "react-dom" "^18.2.0",  // React-DOM库，用于在DOM中渲染React组件</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "axios" "^1.2.3"       // Axios，用于发送 HTTP 请求</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>当你运行 <code>npm install</code> 时，<code>dependencies</code> 中列出的所有库都会被安装到项目中。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="devdependencies">devDependencies<a href="https://sumingcheng.github.io/docs-hub/blog/packagejson-%E4%B8%89%E7%A7%8D%E7%B1%BB%E5%9E%8B%E7%9A%84%E4%BE%9D%E8%B5%96#devdependencies" class="hash-link" aria-label="devDependencies的直接链接" title="devDependencies的直接链接">​</a></h2>
<p><code>devDependencies</code> 中列出了项目在开发阶段需要的工具和库。这些包只会在开发环境中使用，并且不会在生产环境中被包含。</p>
<p><strong>Webpack</strong> 是打包工具，用于将代码捆绑成生产环境所需的文件。</p>
<p><strong>Babel-loader</strong> 是用来将现代 JavaScript（如 ES6+）转译成兼容性更好的版本，通常配合 Webpack 使用。</p>
<p><strong>ESLint</strong> 是一个 JavaScript 代码检查工具，用于保证代码质量。</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">"devDependencies" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "webpack" "^5.60.0",      // Webpack，用于打包代码</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "webpack-cli" "^4.9.0",    // Webpack CLI，允许在命令行中使用Webpack</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "babel-loader" "^8.2.3",   // Babel loader，用于转译JS代码</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "eslint" "^8.0.0",         // ESLint，用于代码风格和质量检查</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "style-loader" "^3.3.1",   // Style loader，处理CSS的加载</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "css-loader" "^6.7.0"      // CSS loader，处理CSS文件</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这些库的主要作用是为了帮助你在开发过程中构建和优化代码。例如，你使用 Webpack 打包代码，Babel 将 ES6 转译为 ES5，ESLint 确保代码符合规范。而这些工具在生产环境中不需要，因此它们只会被列在 <code>devDependencies</code> 中。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="peerdependencies">peerDependencies<a href="https://sumingcheng.github.io/docs-hub/blog/packagejson-%E4%B8%89%E7%A7%8D%E7%B1%BB%E5%9E%8B%E7%9A%84%E4%BE%9D%E8%B5%96#peerdependencies" class="hash-link" aria-label="peerDependencies的直接链接" title="peerDependencies的直接链接">​</a></h2>
<p><code>peerDependencies</code> 用来指定该库所依赖的外部库的版本范围，但并不直接安装这些库，而是要求使用该库的项目自己安装这些依赖。</p>
<p>假设你在开发一个 React 组件库，这个组件库依赖于 <code>react</code>，但是你并不希望直接将 <code>react</code> 包含在你的组件库中，因为你的用户可能已经安装了 <code>react</code>。这时，你就可以在 <code>peerDependencies</code> 中指定 <code>react</code> 的版本范围。</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">"peerDependencies" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "react" "^18.0.0"     // 组件库要求项目使用 React 18 或更高版本</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这样，假设用户已经在他们的项目中安装了 <code>react@18.0.0</code>，那么他们就可以使用你的组件库了。如果用户没有安装正确版本的 <code>react</code>，npm 会给出警告提示。</p>]]></content>
        <author>
            <name>素明诚</name>
            <uri>https://github.com/sumingcheng</uri>
        </author>
        <category label="前端" term="前端"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[关闭恢复 Ubuntu GUI]]></title>
        <id>https://sumingcheng.github.io/docs-hub/blog/关闭恢复-ubuntu-gui</id>
        <link href="https://sumingcheng.github.io/docs-hub/blog/关闭恢复-ubuntu-gui"/>
        <updated>2024-11-10T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[临时关闭 GUI]]></summary>
        <content type="html"><![CDATA[<h3 class="anchor anchorWithStickyNavbar_LWe7" id="临时关闭-gui">临时关闭 GUI<a href="https://sumingcheng.github.io/docs-hub/blog/%E5%85%B3%E9%97%AD%E6%81%A2%E5%A4%8D-ubuntu-gui#%E4%B8%B4%E6%97%B6%E5%85%B3%E9%97%AD-gui" class="hash-link" aria-label="临时关闭 GUI的直接链接" title="临时关闭 GUI的直接链接">​</a></h3>
<p>如果你只是想临时关闭 GUI，可以通过以下命令停止显示管理器服务（例如 GDM、LightDM 等）。这会将你带回到命令行界面，而不会在下次启动时影响 GUI。</p>
<p>首先，需要确定你的 Ubuntu 使用的是哪种显示管理器。常见的有<code>gdm3</code>（GNOME Display Manager）和<code>lightdm</code>。</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">systemctl status gdm3</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>或者</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">systemctl status lightdm</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>停止显示管理器服务。例如，如果你的系统使用<code>gdm3</code>，可以使用以下命令</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo systemctl stop gdm3</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>如果是<code>lightdm</code>，使用</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo systemctl stop lightdm</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="永久不启动-gui">永久不启动 GUI<a href="https://sumingcheng.github.io/docs-hub/blog/%E5%85%B3%E9%97%AD%E6%81%A2%E5%A4%8D-ubuntu-gui#%E6%B0%B8%E4%B9%85%E4%B8%8D%E5%90%AF%E5%8A%A8-gui" class="hash-link" aria-label="永久不启动 GUI的直接链接" title="永久不启动 GUI的直接链接">​</a></h3>
<p>如果你想让 Ubuntu 系统永久不启动 GUI，只使用命令行界面，可以禁用显示管理器服务的自动启动。</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo systemctl disable gdm3</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>或者</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo systemctl disable lightdm</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>重启你的电脑</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo reboot</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>系统将以命令行模式重新启动。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="恢复-gui">恢复 GUI<a href="https://sumingcheng.github.io/docs-hub/blog/%E5%85%B3%E9%97%AD%E6%81%A2%E5%A4%8D-ubuntu-gui#%E6%81%A2%E5%A4%8D-gui" class="hash-link" aria-label="恢复 GUI的直接链接" title="恢复 GUI的直接链接">​</a></h3>
<p>如果你想恢复 GUI，可以通过以下命令恢复默认的图形界面启动目标</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo systemctl set-default graphical.target</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo reboot</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>素明诚</name>
            <uri>https://github.com/sumingcheng</uri>
        </author>
        <category label="操作系统与命令" term="操作系统与命令"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[jsdiff 使用指南]]></title>
        <id>https://sumingcheng.github.io/docs-hub/blog/jsdiff-使用指南</id>
        <link href="https://sumingcheng.github.io/docs-hub/blog/jsdiff-使用指南"/>
        <updated>2024-11-08T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[https://github.com/kpdecker/jsdiff 是一个用于计算文本差异的 JavaScript 库。它可以在浏览器和 Node.js 环境中运行，方便地比较两段文本并获取它们之间的差异信息。]]></summary>
        <content type="html"><![CDATA[<p><a href="https://github.com/kpdecker/jsdiff" target="_blank" rel="noopener noreferrer">https://github.com/kpdecker/jsdiff</a> 是一个用于计算文本差异的 JavaScript 库。它可以在浏览器和 Node.js 环境中运行，方便地比较两段文本并获取它们之间的差异信息。</p>
<p>本文将介绍如何在前端项目中使用 jsdiff，并通过一些示例来帮助你快速上手。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="安装">安装<a href="https://sumingcheng.github.io/docs-hub/blog/jsdiff-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97#%E5%AE%89%E8%A3%85" class="hash-link" aria-label="安装的直接链接" title="安装的直接链接">​</a></h2>
<p>你可以通过 pnpm 或 yarn 安装 jsdiff</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">pnpm install diff</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 或</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">yarn add diff</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>在浏览器中，你也可以通过 CDN 引入</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&lt;script src="https://unpkg.com/diff/dist/diff.min.js"&gt;&lt;/script&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="基本用法">基本用法<a href="https://sumingcheng.github.io/docs-hub/blog/jsdiff-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97#%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95" class="hash-link" aria-label="基本用法的直接链接" title="基本用法的直接链接">​</a></h2>
<p>jsdiff 提供了多种比较文本的方法，常用的有</p>
<ul>
<li><code>diffChars(oldStr, newStr[, options])</code>按字符比较</li>
<li><code>diffWords(oldStr, newStr[, options])</code>按单词比较</li>
<li><code>diffLines(oldStr, newStr[, options])</code>按行比较</li>
</ul>
<p>这些方法返回一个差异对象数组，你可以根据这些对象来展示差异。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="示例按字符比较">示例按字符比较<a href="https://sumingcheng.github.io/docs-hub/blog/jsdiff-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97#%E7%A4%BA%E4%BE%8B%E6%8C%89%E5%AD%97%E7%AC%A6%E6%AF%94%E8%BE%83" class="hash-link" aria-label="示例按字符比较的直接链接" title="示例按字符比较的直接链接">​</a></h3>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">const Diff = require('diff');</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">const oldStr = 'Hello World';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">const newStr = 'Hello Javascript World';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">const diff = Diff.diffChars(oldStr, newStr);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">diff.forEach((part) =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  // 添加部分用绿色显示，删除部分用红色显示，未变部分用灰色显示</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  const color = part.added ? 'green' :</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                part.removed ? 'red' : 'grey';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  console.log(part.value, color);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">});</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>输出</strong></p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Hello  grey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Javascript  green</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">World grey</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="示例按单词比较">示例按单词比较<a href="https://sumingcheng.github.io/docs-hub/blog/jsdiff-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97#%E7%A4%BA%E4%BE%8B%E6%8C%89%E5%8D%95%E8%AF%8D%E6%AF%94%E8%BE%83" class="hash-link" aria-label="示例按单词比较的直接链接" title="示例按单词比较的直接链接">​</a></h3>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">const Diff = require('diff');</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">const oldStr = 'I love programming.';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">const newStr = 'We love coding.';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">const diff = Diff.diffWords(oldStr, newStr);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">diff.forEach((part) =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  const color = part.added ? 'green' :</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                part.removed ? 'red' : 'grey';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  console.log(part.value, color);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">});</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>输出</strong></p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">We green</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">I red</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> love  grey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">coding. green</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">programming. red</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="示例按行比较">示例按行比较<a href="https://sumingcheng.github.io/docs-hub/blog/jsdiff-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97#%E7%A4%BA%E4%BE%8B%E6%8C%89%E8%A1%8C%E6%AF%94%E8%BE%83" class="hash-link" aria-label="示例按行比较的直接链接" title="示例按行比较的直接链接">​</a></h3>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">const Diff = require('diff');</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">const oldStr = `Line one</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Line two</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Line three`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">const newStr = `Line one</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Line 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Line three`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">const diff = Diff.diffLines(oldStr, newStr);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">diff.forEach((part) =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  const color = part.added ? 'green' :</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                part.removed ? 'red' : 'grey';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  console.log(part.value, color);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">});</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>输出</strong></p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Line one</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> grey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Line two</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> red</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Line 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> green</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Line three grey</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="创建补丁">创建补丁<a href="https://sumingcheng.github.io/docs-hub/blog/jsdiff-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97#%E5%88%9B%E5%BB%BA%E8%A1%A5%E4%B8%81" class="hash-link" aria-label="创建补丁的直接链接" title="创建补丁的直接链接">​</a></h2>
<p>jsdiff 可以生成统一格式（unified format）的补丁，方便在版本控制中使用。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="示例创建补丁">示例创建补丁<a href="https://sumingcheng.github.io/docs-hub/blog/jsdiff-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97#%E7%A4%BA%E4%BE%8B%E5%88%9B%E5%BB%BA%E8%A1%A5%E4%B8%81" class="hash-link" aria-label="示例创建补丁的直接链接" title="示例创建补丁的直接链接">​</a></h3>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">const Diff = require('diff');</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">const oldStr = 'Hello World';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">const newStr = 'Hello Javascript World';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">const patch = Diff.createPatch('filename.txt', oldStr, newStr);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">console.log(patch);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>输出</strong></p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Index: filename.txt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">===================================================================</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--- filename.txt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+++ filename.txt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@@ -1,1 +1,1 @@</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-Hello World</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+Hello Javascript World</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="应用补丁">应用补丁<a href="https://sumingcheng.github.io/docs-hub/blog/jsdiff-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97#%E5%BA%94%E7%94%A8%E8%A1%A5%E4%B8%81" class="hash-link" aria-label="应用补丁的直接链接" title="应用补丁的直接链接">​</a></h2>
<p>你也可以将补丁应用到原始文本上。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="示例应用补丁">示例应用补丁<a href="https://sumingcheng.github.io/docs-hub/blog/jsdiff-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97#%E7%A4%BA%E4%BE%8B%E5%BA%94%E7%94%A8%E8%A1%A5%E4%B8%81" class="hash-link" aria-label="示例应用补丁的直接链接" title="示例应用补丁的直接链接">​</a></h3>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">const Diff = require('diff');</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">const oldStr = 'Hello World';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">const patch = `Index: filename.txt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">===================================================================</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--- filename.txt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+++ filename.txt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@@ -1,1 +1,1 @@</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-Hello World</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+Hello Javascript World`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">const newStr = Diff.applyPatch(oldStr, patch);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">console.log(newStr);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>输出</strong></p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Hello Javascript World</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="比较数组">比较数组<a href="https://sumingcheng.github.io/docs-hub/blog/jsdiff-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97#%E6%AF%94%E8%BE%83%E6%95%B0%E7%BB%84" class="hash-link" aria-label="比较数组的直接链接" title="比较数组的直接链接">​</a></h2>
<p>除了字符串，jsdiff 还可以比较数组。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="示例比较数组">示例比较数组<a href="https://sumingcheng.github.io/docs-hub/blog/jsdiff-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97#%E7%A4%BA%E4%BE%8B%E6%AF%94%E8%BE%83%E6%95%B0%E7%BB%84" class="hash-link" aria-label="示例比较数组的直接链接" title="示例比较数组的直接链接">​</a></h3>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">const Diff = require('diff');</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">const oldArr = ['apple', 'banana', 'cherry'];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">const newArr = ['apple', 'blueberry', 'cherry', 'date'];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">const diff = Diff.diffArrays(oldArr, newArr);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">diff.forEach((part) =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  const added = part.added ? '+' : '';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  const removed = part.removed ? '-' : '';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  console.log(`${added}${removed}${part.value}`);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">});</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>输出</strong></p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">apple</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-banana</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+blueberry</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cherry</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+date</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="选项参数">选项参数<a href="https://sumingcheng.github.io/docs-hub/blog/jsdiff-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97#%E9%80%89%E9%A1%B9%E5%8F%82%E6%95%B0" class="hash-link" aria-label="选项参数的直接链接" title="选项参数的直接链接">​</a></h2>
<p>jsdiff 的比较方法可以接受一个可选的 <code>options</code> 对象，常用的选项有</p>
<ul>
<li><code>ignoreCase</code>忽略大小写</li>
<li><code>ignoreWhitespace</code>忽略空白字符</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="示例忽略空白字符">示例忽略空白字符<a href="https://sumingcheng.github.io/docs-hub/blog/jsdiff-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97#%E7%A4%BA%E4%BE%8B%E5%BF%BD%E7%95%A5%E7%A9%BA%E7%99%BD%E5%AD%97%E7%AC%A6" class="hash-link" aria-label="示例忽略空白字符的直��接链接" title="示例忽略空白字符的直接链接">​</a></h3>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">const Diff = require('diff');</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">const oldStr = 'Hello   World';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">const newStr = 'Hello World';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">const diff = Diff.diffWords(oldStr, newStr, { ignoreWhitespace: true });</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">diff.forEach((part) =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  const color = part.added ? 'green' :</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                part.removed ? 'red' : 'grey';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  console.log(part.value, color);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">});</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>输出</strong></p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Hello World grey</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="在浏览器中使用">在浏览器中使用<a href="https://sumingcheng.github.io/docs-hub/blog/jsdiff-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97#%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E4%BD%BF%E7%94%A8" class="hash-link" aria-label="在浏览器中使用的直接链接" title="在浏览器中使用的直接链接">​</a></h2>
<p>在浏览器中，你可以直接使用 <code>&lt;script&gt;</code> 标签引入 jsdiff，然后使用全局变量 <code>Diff</code>。</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&lt;script src="https://unpkg.com/diff/dist/diff.min.js"&gt;&lt;/script&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;script&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  const oldStr = 'Hello World';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  const newStr = 'Hello Javascript World';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  const diff = Diff.diffWords(oldStr, newStr);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  diff.forEach((part) =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    const color = part.added ? 'green' :</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  part.removed ? 'red' : 'grey';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    console.log(part.value, color);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  });</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/script&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="原理">原理<a href="https://sumingcheng.github.io/docs-hub/blog/jsdiff-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97#%E5%8E%9F%E7%90%86" class="hash-link" aria-label="原理的直接链接" title="原理的直接链接">​</a></h2>
<p><a href="http://www.xmailserver.org/diff2.pdf" target="_blank" rel="noopener noreferrer">http://www.xmailserver.org/diff2.pdf</a></p>]]></content>
        <author>
            <name>素明诚</name>
            <uri>https://github.com/sumingcheng</uri>
        </author>
        <category label="前端" term="前端"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[禁用微软拼音输入法简体繁体热键]]></title>
        <id>https://sumingcheng.github.io/docs-hub/blog/禁用微软拼音输入法简体繁体热键</id>
        <link href="https://sumingcheng.github.io/docs-hub/blog/禁用微软拼音输入法简体繁体热键"/>
        <updated>2024-11-06T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[win10 系统操作流程如下]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="win10-系统操作流程如下">win10 系统操作流程如下<a href="https://sumingcheng.github.io/docs-hub/blog/%E7%A6%81%E7%94%A8%E5%BE%AE%E8%BD%AF%E6%8B%BC%E9%9F%B3%E8%BE%93%E5%85%A5%E6%B3%95%E7%AE%80%E4%BD%93%E7%B9%81%E4%BD%93%E7%83%AD%E9%94%AE#win10-%E7%B3%BB%E7%BB%9F%E6%93%8D%E4%BD%9C%E6%B5%81%E7%A8%8B%E5%A6%82%E4%B8%8B" class="hash-link" aria-label="win10 系统操作流程如下的直接链接" title="win10 系统操作流程如下的直接链接">​</a></h2>
<p>右键，“英”，选择设置</p>
<p><img decoding="async" loading="lazy" alt="ad12454645bee928f2d78b355cbc8a87" src="https://sumingcheng.github.io/docs-hub/assets/images/ad12454645bee928f2d78b355cbc8a87-c365e78b709abcac4a83f06dea8803bb.jpg" width="496" height="582" class="img_ev3q">### 选择按键<br>
<img decoding="async" loading="lazy" alt="2d725c9fb01b2524b2b163ec255a5e84" src="https://sumingcheng.github.io/docs-hub/assets/images/2d725c9fb01b2524b2b163ec255a5e84-78f9a1941f7244e273326aef9d66affd.jpg" width="585" height="619" class="img_ev3q">### 拉到最下面，关闭热键<br>
<img decoding="async" loading="lazy" alt="ce0c321927f219d6c5021e3fb633ea5f" src="https://sumingcheng.github.io/docs-hub/assets/images/ce0c321927f219d6c5021e3fb633ea5f-faea2e381c4e0854e567d16f86bc1722.jpg" width="407" height="899" class="img_ev3q"></p>
<p>这输入法热键真的太烦人了</p>]]></content>
        <author>
            <name>素明诚</name>
            <uri>https://github.com/sumingcheng</uri>
        </author>
        <category label="操作系统与命令" term="操作系统与命令"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python 多线程编程实践]]></title>
        <id>https://sumingcheng.github.io/docs-hub/blog/python-多线程编程实践</id>
        <link href="https://sumingcheng.github.io/docs-hub/blog/python-多线程编程实践"/>
        <updated>2024-11-04T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[全局解释器锁（GIL）]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="全局解释器锁gil">全局解释器锁（GIL）<a href="https://sumingcheng.github.io/docs-hub/blog/python-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5#%E5%85%A8%E5%B1%80%E8%A7%A3%E9%87%8A%E5%99%A8%E9%94%81gil" class="hash-link" aria-label="全局解释器锁（GIL）的直接链接" title="全局解释器锁（GIL）的直接链接">​</a></h2>
<p>在 Python 的并发编程中，全局解释器锁（GIL）是一个重要的考量因素。它限制了在 CPython（解释器）中同时只有一个线程执行字节码，从而影响 CPU 密集型任务的性能。尽管如此，GIL 的存在对 I/O 密集型任务影响较小，因为线程在等待 I/O 操作时可以释放 GIL，允许其他线程运行。在此背景下，开发者通常根据任务性质选择合适的并发模式。</p>
<p>对于 I/O 密集型任务，<code>Threading</code>模块和<code>ThreadPoolExecutor</code>提供了较为简单的实现，允许多个线程并行执行 I/O 操作。而<code>asyncio</code>则利用事件循环和协程来处理高并发 I/O 请求，其非阻塞模型在处理大量连接时更为高效。</p>
<p>在 CPU 密集型任务的场景中，<code>multiprocessing</code>模块是更优的选择。它通过创建多个独立进程，每个进程都有自己的 Python 解释器和内存空间，从而绕过 GIL，实现真正的并行计算。这使得<code>multiprocessing</code>能充分利用多核处理器的能力。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="并发编程方式">并发编程方式<a href="https://sumingcheng.github.io/docs-hub/blog/python-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5#%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E6%96%B9%E5%BC%8F" class="hash-link" aria-label="并发编程方式的直接链接" title="并发编程方式的直接链接">​</a></h2>
<table><thead><tr><th>特性</th><th>threading</th><th>multiprocessing</th><th>ThreadPoolExecutor</th><th>asyncio</th></tr></thead><tbody><tr><td>适用场景</td><td>I/O 密集型</td><td>CPU 密集型</td><td>I/O 密集型</td><td>I/O 密集型</td></tr><tr><td>并行性</td><td>受 GIL 限制</td><td>真正的并行</td><td>受 GIL 限制</td><td>真正的并行（基于协程）</td></tr><tr><td>资源管理</td><td>共享内存</td><td>进程间内存隔离</td><td>线程池自动管理</td><td>单线程事件循环</td></tr><tr><td>管理复杂性</td><td>简单</td><td>较复杂</td><td>简单</td><td>中等复杂（需要理解异步概念）</td></tr><tr><td>性能</td><td>对于 I/O 效率较高</td><td>对于计算效率较高</td><td>对于 I/O 效率较高</td><td>对于大量并发 I/O 操作效率高</td></tr><tr><td>适合并发量</td><td>较小（线程上下文切换开销）</td><td>大（多个进程）</td><td>较大（可配置最大线程数）</td><td>很大（可处理成千上万的连接）</td></tr><tr><td>编程模型</td><td>基于线程</td><td>基于进程</td><td>基于线程</td><td>基于协程</td></tr></tbody></table>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="threading">threading<a href="https://sumingcheng.github.io/docs-hub/blog/python-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5#threading" class="hash-link" aria-label="threading的直接链接" title="threading的直接链接">​</a></h2>
<p>最适合处理 I/O 密集型任务，但在 CPU 密集型任务中性能受限于 GIL。管理简单，适合小规模并发场景。</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">import threading</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import requests</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 下载单个 URL 的函数</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">def download_url(url):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    try:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        response = requests.get(url, timeout=5)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        print(f"成功下载: {url}, 内容长度: {len(response.content)}")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    except Exception as e:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        print(f"下载失败: {url}, 错误: {e}")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">def main(urls):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    threads = []</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    for url in urls:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        thread = threading.Thread(target=download_url, args=(url,))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        threads.append(thread)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        thread.start()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    for thread in threads:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        thread.join()  # 等待所有线程完成</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if __name__ == "__main__":</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    urls = [f"https://www.example.com/{i}" for i in range(10)]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    main(urls)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="multiprocessing">multiprocessing<a href="https://sumingcheng.github.io/docs-hub/blog/python-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5#multiprocessing" class="hash-link" aria-label="multiprocessing的直接链接" title="multiprocessing的直接链接">​</a></h2>
<p>适合 CPU 密集型任务，能够实现真正的并行。进程间内存隔离，适合大规模计算，但管理较复杂。</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">import multiprocessing</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import requests</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 下载单个 URL 的函数</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">def download_url(url):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    try:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        response = requests.get(url, timeout=5)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        print(f"成功下载: {url}, 内容长度: {len(response.content)}")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    except Exception as e:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        print(f"下载失败: {url}, 错误: {e}")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">def main(urls):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    with multiprocessing.Pool(processes=5) as pool:  # 使用进程池</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        pool.map(download_url, urls)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if __name__ == "__main__":</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    urls = [f"https://www.example.com/{i}" for i in range(10)]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    main(urls)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="threadpoolexecutor">ThreadPoolExecutor<a href="https://sumingcheng.github.io/docs-hub/blog/python-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5#threadpoolexecutor" class="hash-link" aria-label="ThreadPoolExecutor的直接链接" title="ThreadPoolExecutor的直接链接">​</a></h2>
<p>提供了简单的线程池管理，适合 I/O 密集型任务。更高效地管理线程，易于使用。</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">import requests</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">from concurrent.futures import ThreadPoolExecutor</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 下载单个 URL 的函数</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">def download_url(url):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    try:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        response = requests.get(url, timeout=5)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        print(f"成功下载: {url}, 内容长度: {len(response.content)}")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    except Exception as e:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        print(f"下载失败: {url}, 错误: {e}")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">def main(urls):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    with ThreadPoolExecutor(max_workers=5) as executor:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        executor.map(download_url, urls)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if __name__ == "__main__":</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    urls = [f"https://www.example.com/{i}" for i in range(10)]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    main(urls)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="asyncio">asyncio<a href="https://sumingcheng.github.io/docs-hub/blog/python-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5#asyncio" class="hash-link" aria-label="asyncio的直接链接" title="asyncio的直接链接">​</a></h2>
<p>语法类似于 JS，通过事件循环和协程处理 I/O 密集型任务，能处理大量并发。编程模型相对复杂，需要理解异步编程的概念，但能显著提升 I/O 性能。</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">import asyncio</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import aiohttp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 异步下载单个 URL 的函数</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">async def download_url(session, url):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    try:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        async with session.get(url, timeout=5) as response:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            content = await response.read()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            print(f"成功下载: {url}, 内容长度: {len(content)}")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    except Exception as e:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        print(f"下载失败: {url}, 错误: {e}")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">async def main(urls):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    async with aiohttp.ClientSession() as session:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tasks = [download_url(session, url) for url in urls]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        await asyncio.gather(*tasks)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if __name__ == "__main__":</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    urls = [f"https://www.example.com/{i}" for i in range(10)]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    asyncio.run(main(urls))</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="四种方式对比">四种方式对比<a href="https://sumingcheng.github.io/docs-hub/blog/python-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5#%E5%9B%9B%E7%A7%8D%E6%96%B9%E5%BC%8F%E5%AF%B9%E6%AF%94" class="hash-link" aria-label="四种方式对比的直接链接" title="四种方式对比的直接链接">​</a></h2>
<p><strong>对于 I/O 密集型任务</strong>，<code>asyncio</code> 和 <code>ThreadPoolExecutor</code> 是优秀的选择，但 <code>asyncio</code> 更适合处理高并发连接。</p>
<p><strong>对于 CPU 密集型任务</strong>，<code>multiprocessing</code> 模块允许在 Python 中创建多个进程，每个进程都有自己的 Python 解释器和内存空间。因此，它可以绕过全局解释器锁（GIL），实现真正的并行计算。这使得 <code>multiprocessing</code> 非常适合 CPU 密集型任务，因为它能够充分利用多核处理器的计算能力。</p>]]></content>
        <author>
            <name>素明诚</name>
            <uri>https://github.com/sumingcheng</uri>
        </author>
        <category label="后端" term="后端"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[生成自签名 SSL 证书]]></title>
        <id>https://sumingcheng.github.io/docs-hub/blog/生成自签名-ssl-证书</id>
        <link href="https://sumingcheng.github.io/docs-hub/blog/生成自签名-ssl-证书"/>
        <updated>2024-11-04T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[生成自签名 SSL 证书]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="生成自签名-ssl-证书">生成自签名 SSL 证书<a href="https://sumingcheng.github.io/docs-hub/blog/%E7%94%9F%E6%88%90%E8%87%AA%E7%AD%BE%E5%90%8D-ssl-%E8%AF%81%E4%B9%A6#%E7%94%9F%E6%88%90%E8%87%AA%E7%AD%BE%E5%90%8D-ssl-%E8%AF%81%E4%B9%A6" class="hash-link" aria-label="生成自签名 SSL 证书的直接链接" title="生成自签名 SSL 证书的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="生成私钥-openssl-genrsa">生成私钥 (openssl genrsa)<a href="https://sumingcheng.github.io/docs-hub/blog/%E7%94%9F%E6%88%90%E8%87%AA%E7%AD%BE%E5%90%8D-ssl-%E8%AF%81%E4%B9%A6#%E7%94%9F%E6%88%90%E7%A7%81%E9%92%A5-openssl-genrsa" class="hash-link" aria-label="生成私钥 (openssl genrsa)的直接链接" title="生成私钥 (openssl genrsa)的直接链接">​</a></h3>
<p>私钥是整个证书体系的基础，用于生成公钥和签署证书。它必须保密，因为拥有私钥就能够解密通过相应公钥加密的所有信息。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="生成证书签名请求-csr-openssl-req">生成证书签名请求 (CSR) (openssl req)<a href="https://sumingcheng.github.io/docs-hub/blog/%E7%94%9F%E6%88%90%E8%87%AA%E7%AD%BE%E5%90%8D-ssl-%E8%AF%81%E4%B9%A6#%E7%94%9F%E6%88%90%E8%AF%81%E4%B9%A6%E7%AD%BE%E5%90%8D%E8%AF%B7%E6%B1%82-csr-openssl-req" class="hash-link" aria-label="生成证书签名请求 (CSR) (openssl req)的直接链接" title="生成证书签名请求 (CSR) (openssl req)的直接链接">​</a></h3>
<p>CSR 包含证书的相关信息（如组织名、常用名等），以及由对应私钥生成的公钥。CSR 本质上是请求某个证书授权机构（CA）发行证书的正式请求。尽管在自签名过程中不需要外部 CA 的介入，生成 CSR 仍是标准流程的一部分，以确保所有必要信息的包含和正确性。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="生成自签名证书-openssl-x509">生成自签名证书 (openssl x509)<a href="https://sumingcheng.github.io/docs-hub/blog/%E7%94%9F%E6%88%90%E8%87%AA%E7%AD%BE%E5%90%8D-ssl-%E8%AF%81%E4%B9%A6#%E7%94%9F%E6%88%90%E8%87%AA%E7%AD%BE%E5%90%8D%E8%AF%81%E4%B9%A6-openssl-x509" class="hash-link" aria-label="生成自签名证书 (openssl x509)的直接链接" title="生成自签名证书 (openssl x509)的直接链接">​</a></h3>
<p>自签名证书意味着使用同一把私钥对 CSR 进行签名，即自己是自己的 CA。这样生成的证书可用于测试环境或内部网络，因为它不由外部信任的 CA 签名。在没有外部验证的情况下，自签名证书能够提供加密和服务器身份验证的功能。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="生成一个-rsa-私钥">生成一个 RSA 私钥<a href="https://sumingcheng.github.io/docs-hub/blog/%E7%94%9F%E6%88%90%E8%87%AA%E7%AD%BE%E5%90%8D-ssl-%E8%AF%81%E4%B9%A6#%E7%94%9F%E6%88%90%E4%B8%80%E4%B8%AA-rsa-%E7%A7%81%E9%92%A5" class="hash-link" aria-label="生成一个 RSA 私钥的直接链接" title="生成一个 RSA 私钥的直接链接">​</a></h2>
<p><code>openssl genrsa -out $KEY_FILE 2048</code></p>
<table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>genrsa</td><td>生成 RSA 密钥命令。</td></tr><tr><td>-out</td><td>指定输出文件，后面跟文件名。</td></tr><tr><td>$KEY_FILE</td><td>被 -out 使用，指定私钥的文件名。</td></tr><tr><td>2048</td><td>生成密钥的位数，这里为 2048 位。</td></tr></tbody></table>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="创建一个证书签名请求csr">创建一个证书签名请求（CSR）<a href="https://sumingcheng.github.io/docs-hub/blog/%E7%94%9F%E6%88%90%E8%87%AA%E7%AD%BE%E5%90%8D-ssl-%E8%AF%81%E4%B9%A6#%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E8%AF%81%E4%B9%A6%E7%AD%BE%E5%90%8D%E8%AF%B7%E6%B1%82csr" class="hash-link" aria-label="创建一个证书签名请求（CSR）的直接链接" title="创建一个证书签名请求（CSR）的直接链接">​</a></h2>
<p><code>openssl req -new -key $KEY_FILE -out $CSR_FILE -subj "/C=CN/ST=Beijing/L=Beijing/O=Example Corp/OU=IT Department/CN=example.com"</code></p>
<table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>req</td><td>证书请求命令，可以用来创建 CSR 或自签名证书。</td></tr><tr><td>-new</td><td>表示创建一个新的请求。</td></tr><tr><td>-key</td><td>指定使用的私钥文件，用于签署这个请求。</td></tr><tr><td>$KEY_FILE</td><td>由 -key 使用，指向存储私钥的文件。</td></tr><tr><td>-out</td><td>指定输出文件，这里用于指定 CSR 的输出文件。</td></tr><tr><td>$CSR_FILE</td><td>被 -out 使用，指定 CSR 的文件名。</td></tr><tr><td>-subj</td><td>指定在 CSR 或证书中包含的主题详情，格式为 /C=.../ST=.../...</td></tr></tbody></table>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="使用-csr-和私钥生成自签名的证书">使用 CSR 和私钥生成自签名的证书<a href="https://sumingcheng.github.io/docs-hub/blog/%E7%94%9F%E6%88%90%E8%87%AA%E7%AD%BE%E5%90%8D-ssl-%E8%AF%81%E4%B9%A6#%E4%BD%BF%E7%94%A8-csr-%E5%92%8C%E7%A7%81%E9%92%A5%E7%94%9F%E6%88%90%E8%87%AA%E7%AD%BE%E5%90%8D%E7%9A%84%E8%AF%81%E4%B9%A6" class="hash-link" aria-label="使用 CSR 和私钥生成自签名的证书的直接链接" title="使用 CSR 和私钥生成自签名的证书的直接链接">​</a></h2>
<p><code>openssl x509 -req -days 365 -in $CSR_FILE -signkey $KEY_FILE -out $CRT_FILE</code></p>
<table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>x509</td><td>X.509 证书处理命令。</td></tr><tr><td>-req</td><td>指示输入文件是一个 CSR。</td></tr><tr><td>-days</td><td>指定证书的有效期，这里为 365 天。</td></tr><tr><td>365</td><td>证书的有效天数。</td></tr><tr><td>-in</td><td>指定输入文件，这里是 CSR 文件。</td></tr><tr><td>$CSR_FILE</td><td>由 -in 使用，指定 CSR 的文件名。</td></tr><tr><td>-signkey</td><td>指定用于签署证书的私钥文件。</td></tr><tr><td>$KEY_FILE</td><td>被 -signkey 使用，指定私钥的文件名。</td></tr><tr><td>-out</td><td>指定输出文件，这里用于指定证书的输出文件。</td></tr><tr><td>$CRT_FILE</td><td>被 -out 使用，指定证书的文件名。</td></tr></tbody></table>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="测试证书">测试证书<a href="https://sumingcheng.github.io/docs-hub/blog/%E7%94%9F%E6%88%90%E8%87%AA%E7%AD%BE%E5%90%8D-ssl-%E8%AF%81%E4%B9%A6#%E6%B5%8B%E8%AF%95%E8%AF%81%E4%B9%A6" class="hash-link" aria-label="测试证书的直接链接" title="测试证书的直接链接">​</a></h2>
<p>在使用自签名 SSL 证书时，你需要按照上述三步操作生成密钥、CSR 和证书后，然后在实际的服务器配置中应用这些生成的文件。下面是将生成的自签名证书和密钥应用到常见服务器设置的一些基本步骤：</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="生成密钥和证书">生成密钥和证书<a href="https://sumingcheng.github.io/docs-hub/blog/%E7%94%9F%E6%88%90%E8%87%AA%E7%AD%BE%E5%90%8D-ssl-%E8%AF%81%E4%B9%A6#%E7%94%9F%E6%88%90%E5%AF%86%E9%92%A5%E5%92%8C%E8%AF%81%E4%B9%A6" class="hash-link" aria-label="生成密钥和证书的直接链接" title="生成密钥和证书的直接链接">​</a></h3>
<p><code>root.key</code>：私钥文件。</p>
<p><code>root.csr</code>：证书签名请求。</p>
<p><code>root.crt</code>：自签名的证书文件。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="服务器配置">服务器配置<a href="https://sumingcheng.github.io/docs-hub/blog/%E7%94%9F%E6%88%90%E8%87%AA%E7%AD%BE%E5%90%8D-ssl-%E8%AF%81%E4%B9%A6#%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE" class="hash-link" aria-label="服务器配置的直接链接" title="服务器配置的直接链接">​</a></h3>
<p>取决于你的应用服务器或服务类型（如 Apache、Nginx、Tomcat 等），你需要在服务器的配置文件中指定证书和密钥的路径。这里以 Nginx 和 Apache 为例进行说明：</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="nginx">Nginx<a href="https://sumingcheng.github.io/docs-hub/blog/%E7%94%9F%E6%88%90%E8%87%AA%E7%AD%BE%E5%90%8D-ssl-%E8%AF%81%E4%B9%A6#nginx" class="hash-link" aria-label="Nginx的直接链接" title="Nginx的直接链接">​</a></h3>
<p>对于 Nginx，你可以在其配置文件（通常位于 <code>/etc/nginx/nginx.conf</code> 或某个特定的站点配置文件中）设置 SSL 证书和密钥路径：</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">server {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    listen 443 ssl;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    server_name example.com;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ssl_certificate /path/to/root.crt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ssl_certificate_key /path/to/root.key;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">​</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    location / {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        root /usr/share/nginx/html;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        index index.html index.htm;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这里，<code>ssl_certificate</code> 和 <code>ssl_certificate_key</code> 指向你的证书文件和私钥文件。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="测试和验证">测试和验证<a href="https://sumingcheng.github.io/docs-hub/blog/%E7%94%9F%E6%88%90%E8%87%AA%E7%AD%BE%E5%90%8D-ssl-%E8%AF%81%E4%B9%A6#%E6%B5%8B%E8%AF%95%E5%92%8C%E9%AA%8C%E8%AF%81" class="hash-link" aria-label="测试和验证的直接链接" title="测试和验证的直接链接">​</a></h3>
<p>配置完成后，重启你的 Web 服务器以使更改生效。然后可以使用浏览器或工具（如 <code>curl</code>）来验证 HTTPS 是否正常工作</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">curl -k https://example.com</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>选项 <code>-k</code> 允许 <code>curl</code> 忽略 SSL 证书验证错误</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="openssl-自签名脚本">OpenSSL 自签名脚本<a href="https://sumingcheng.github.io/docs-hub/blog/%E7%94%9F%E6%88%90%E8%87%AA%E7%AD%BE%E5%90%8D-ssl-%E8%AF%81%E4%B9%A6#openssl-%E8%87%AA%E7%AD%BE%E5%90%8D%E8%84%9A%E6%9C%AC" class="hash-link" aria-label="OpenSSL 自签名脚本的直接链接" title="OpenSSL 自签名脚本的直接链接">​</a></h3>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">#!/bin/bash</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 配置变量</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">KEY_FILE="root.key"         # 私钥文件名</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CRT_FILE="root.crt"         # 证书文件名</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CSR_FILE="root.csr"         # CSR 文件名</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">DAYS_VALID=365               # 证书有效天数</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">COUNTRY="CN"                 # 国家</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">STATE="Beijing"              # 省份</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">LOCALITY="Beijing"           # 城市</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ORG="Example Corp"           # 组织</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ORG_UNIT="IT Department"     # 组织单位</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">COMMON_NAME="harbor.com"     # 公共名称</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 生成私钥</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if openssl genrsa -out "$KEY_FILE" 2048; then</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo "私钥生成成功：$KEY_FILE"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">else</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo "私钥生成失败" &gt;&amp;2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    exit 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 创建证书签名请求 (CSR)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if openssl req -new -key "$KEY_FILE" -out "$CSR_FILE" -subj "/C=$COUNTRY/ST=$STATE/L=$LOCALITY/O=$ORG/OU=$ORG_UNIT/CN=$COMMON_NAME"; then</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo "证书签名请求生成成功：$CSR_FILE"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">else</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo "CSR 生成失败" &gt;&amp;2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    exit 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 自签名证书</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if openssl x509 -req -days "$DAYS_VALID" -in "$CSR_FILE" -signkey "$KEY_FILE" -out "$CRT_FILE"; then</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo "自签名证书生成成功：$CRT_FILE"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">else</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo "证书生成失败" &gt;&amp;2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    exit 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo "证书生成完毕："</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo "私钥文件：$KEY_FILE"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo "证书文件：$CRT_FILE"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>素明诚</name>
            <uri>https://github.com/sumingcheng</uri>
        </author>
        <category label="后端" term="后端"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Linux mc 文件管理工具快速删除文件]]></title>
        <id>https://sumingcheng.github.io/docs-hub/blog/linux-mc-文件管理工具快速删除文件</id>
        <link href="https://sumingcheng.github.io/docs-hub/blog/linux-mc-文件管理工具快速删除文件"/>
        <updated>2024-11-04T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[使用 mc 删除文件]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="使用-mc-删除文件">使用 mc 删除文件<a href="https://sumingcheng.github.io/docs-hub/blog/linux-mc-%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E5%BF%AB%E9%80%9F%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6#%E4%BD%BF%E7%94%A8-mc-%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6" class="hash-link" aria-label="使用 mc 删除文件的直接链接" title="使用 mc 删除文件的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="启动-mc">启动 mc<a href="https://sumingcheng.github.io/docs-hub/blog/linux-mc-%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E5%BF%AB%E9%80%9F%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6#%E5%90%AF%E5%8A%A8-mc" class="hash-link" aria-label="启动 mc的直接链接" title="启动 mc的直接链接">​</a></h3>
<p>在终端输入 <code>mc</code> 命令，打开 Midnight Commander 界面。</p>
<p><img decoding="async" loading="lazy" alt="dcd0a1bcdd20daaa2cad92851e6435d8" src="https://sumingcheng.github.io/docs-hub/assets/images/dcd0a1bcdd20daaa2cad92851e6435d8-abcee923fa8a365fdeb0cbe80f3d0b9b.jpg" width="1440" height="703" class="img_ev3q">### 浏览文件系统</p>
<p>使用箭头键浏览文件和文件夹。左侧和右侧面板可以分别显示不同目录的内容。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="选择文件">选择文件<a href="https://sumingcheng.github.io/docs-hub/blog/linux-mc-%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E5%BF%AB%E9%80%9F%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6#%E9%80%89%E6%8B%A9%E6%96%87%E4%BB%B6" class="hash-link" aria-label="选择文件的直接链接" title="选择文件的直接链接">​</a></h3>
<p>使用方向键移动光标到要删除的文件或文件夹上。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="删除文件">删除文件<a href="https://sumingcheng.github.io/docs-hub/blog/linux-mc-%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E5%BF%AB%E9%80%9F%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6#%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6" class="hash-link" aria-label="删除文件的直接链接" title="删除文件的直接链接">​</a></h3>
<p>按 <code>F8</code> 键，系统会弹出一个确认对话框，询问是否删除选中的文件。</p>
<p>确认后，文件将被删除。</p>
<p><img decoding="async" loading="lazy" alt="44f8916b6a72e8bb193d17dba7205fd1" src="https://sumingcheng.github.io/docs-hub/assets/images/44f8916b6a72e8bb193d17dba7205fd1-1ab2fff087f23c3b3e3d0c6d4d4c8207.jpg" width="1440" height="703" class="img_ev3q">### 批量删除</p>
<p>可以使用 <code>Insert</code> 键选择多个文件，然后按 <code>F8</code> 进行批量删除。</p>
<p>下面是每个功能的具体示例，帮助你更好地理解 Midnight Commander (MC) 的使用</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="其他操作">其他操作<a href="https://sumingcheng.github.io/docs-hub/blog/linux-mc-%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E5%BF%AB%E9%80%9F%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6#%E5%85%B6%E4%BB%96%E6%93%8D%E4%BD%9C" class="hash-link" aria-label="其他操作的直接链接" title="其他操作的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="浏览文件系统">浏览文件系统<a href="https://sumingcheng.github.io/docs-hub/blog/linux-mc-%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E5%BF%AB%E9%80%9F%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6#%E6%B5%8F%E8%A7%88%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F" class="hash-link" aria-label="浏览文件系统的直接链接" title="浏览文件系统的直接链接">​</a></h3>
<p>启动 MC，使用方向键在左侧和右侧窗格中浏览不同的目录。例如，按 <code>Tab</code> 键切换窗格。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="文件复制和移动">文件复制和移动<a href="https://sumingcheng.github.io/docs-hub/blog/linux-mc-%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E5%BF%AB%E9%80%9F%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6#%E6%96%87%E4%BB%B6%E5%A4%8D%E5%88%B6%E5%92%8C%E7%A7%BB%E5%8A%A8" class="hash-link" aria-label="文件复制和移动的直接链接" title="文件复制和移动的直接链接">​</a></h3>
<p>选中一个文件，按 <code>F5</code> 复制，或按 <code>F6</code> 移动到目标目录。在弹出的对话框中选择目标路径。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="重命名文件">重命名文件<a href="https://sumingcheng.github.io/docs-hub/blog/linux-mc-%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E5%BF%AB%E9%80%9F%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6#%E9%87%8D%E5%91%BD%E5%90%8D%E6%96%87%E4%BB%B6" class="hash-link" aria-label="重命名文件的直接链接" title="重命名文件的直接链接">​</a></h3>
<p>选中要重命名的文件，按 <code>F6</code>，然后输入新名称，最后确认。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="文件查看和编辑">文件查看和编辑<a href="https://sumingcheng.github.io/docs-hub/blog/linux-mc-%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E5%BF%AB%E9%80%9F%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6#%E6%96%87%E4%BB%B6%E6%9F%A5%E7%9C%8B%E5%92%8C%E7%BC%96%E8%BE%91" class="hash-link" aria-label="文件查看和编辑的直接链接" title="文件查看和编辑的直接链接">​</a></h3>
<p>选中一个文本文件，按 <code>F3</code> 查看文件内容。要编辑，按 <code>F4</code> 打开内置编辑器。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="搜索文件">搜索文件<a href="https://sumingcheng.github.io/docs-hub/blog/linux-mc-%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E5%BF%AB%E9%80%9F%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6#%E6%90%9C%E7%B4%A2%E6%96%87%E4%BB%B6" class="hash-link" aria-label="搜索文件的直接链接" title="搜索文件的直接链接">​</a></h3>
<p>按 <code>Ctrl + S</code>，输入要搜索的文件名或模式（如 <code>*.txt</code>），然后 MC 会在当前目录及子目录中搜索。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="批量选择文件">批量选择文件<a href="https://sumingcheng.github.io/docs-hub/blog/linux-mc-%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E5%BF%AB%E9%80%9F%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6#%E6%89%B9%E9%87%8F%E9%80%89%E6%8B%A9%E6%96%87%E4%BB%B6" class="hash-link" aria-label="批量选择文件的直接链接" title="批量选择文件的直接链接">​</a></h3>
<p>按 <code>Insert</code> 键选中多个文件。完成选择后，按 <code>F5</code> 或 <code>F6</code> 进行批量复制或移动。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="比较文件">比较文件<a href="https://sumingcheng.github.io/docs-hub/blog/linux-mc-%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E5%BF%AB%E9%80%9F%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6#%E6%AF%94%E8%BE%83%E6%96%87%E4%BB%B6" class="hash-link" aria-label="比较文件的直接链接" title="比较文件的直接链接">​</a></h3>
<p>选中两个文件（按 <code>Insert</code> 选中），然后按 <code>F9</code>，选择“文件”菜单中的“比较”选项，查看它们的差异。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="支持压缩和解压缩">支持压缩和解压缩<a href="https://sumingcheng.github.io/docs-hub/blog/linux-mc-%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E5%BF%AB%E9%80%9F%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6#%E6%94%AF%E6%8C%81%E5%8E%8B%E7%BC%A9%E5%92%8C%E8%A7%A3%E5%8E%8B%E7%BC%A9" class="hash-link" aria-label="支持压缩和解压缩的直接链接" title="支持压缩和解压缩的直接链接">​</a></h3>
<p>选中一个压缩文件（如 <code>.zip</code>），按 <code>F4</code> 解压或按 <code>F5</code> 创建新的压缩文件。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="访问-ftpsftp-服务器">访问 FTP/SFTP 服务器<a href="https://sumingcheng.github.io/docs-hub/blog/linux-mc-%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E5%BF%AB%E9%80%9F%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6#%E8%AE%BF%E9%97%AE-ftpsftp-%E6%9C%8D%E5%8A%A1%E5%99%A8" class="hash-link" aria-label="访问 FTP/SFTP 服务器的直接链接" title="访问 FTP/SFTP 服务器的直接链接">​</a></h3>
<p>在 MC 中，按 <code>Ctrl + \</code>，输入 FTP/SFTP 服务器地址（如 <code>ftp//example.com</code>），然后输入用户名和密码，连接后可以管理远程文件。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="文件属性和权限管理">文件属性和权限管理<a href="https://sumingcheng.github.io/docs-hub/blog/linux-mc-%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E5%BF%AB%E9%80%9F%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6#%E6%96%87%E4%BB%B6%E5%B1%9E%E6%80%A7%E5%92%8C%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86" class="hash-link" aria-label="文件属性和权限管理的直接链接" title="文件属性和权限管理的直接链接">​</a></h3>
<p>选中一个文件，按 <code>F9</code>，选择“文件”菜单中的“属性”，可以查看和修改文件的权限和所有者。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="执行外部命令">执行外部命令<a href="https://sumingcheng.github.io/docs-hub/blog/linux-mc-%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E5%BF%AB%E9%80%9F%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6#%E6%89%A7%E8%A1%8C%E5%A4%96%E9%83%A8%E5%91%BD%E4%BB%A4" class="hash-link" aria-label="执行外部命令的直接链接" title="执行外部命令的直接链接">​</a></h3>
<p>在 MC 界面中，按 <code>Ctrl + O</code> 切换到命令行模式，输入所需的命令（如 <code>ls -l</code>），然后按 <code>Enter</code> 执行。</p>
<p>通过这些示例，你可以更全面地了解如何使用 MC 进行各种文件管理操作。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="注意事项">注意事项<a href="https://sumingcheng.github.io/docs-hub/blog/linux-mc-%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E5%BF%AB%E9%80%9F%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9" class="hash-link" aria-label="注意事项的直接链接" title="注意事项的直接链接">​</a></h2>
<p><strong>隐藏文件</strong>默认情况下，<code>mc</code> 可能不显示以 <code>.</code> 开头的隐藏文件。如果需要查看和删除这些文件，可以在 <code>mc</code> 的设置中调整显示选项。</p>]]></content>
        <author>
            <name>素明诚</name>
            <uri>https://github.com/sumingcheng</uri>
        </author>
        <category label="开发工具与环境" term="开发工具与环境"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Linux 挂载磁盘的步骤]]></title>
        <id>https://sumingcheng.github.io/docs-hub/blog/linux-挂载磁盘的步骤</id>
        <link href="https://sumingcheng.github.io/docs-hub/blog/linux-挂载磁盘的步骤"/>
        <updated>2024-11-03T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[查看磁盘信息]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="查看磁盘信息">查看磁盘信息<a href="https://sumingcheng.github.io/docs-hub/blog/linux-%E6%8C%82%E8%BD%BD%E7%A3%81%E7%9B%98%E7%9A%84%E6%AD%A5%E9%AA%A4#%E6%9F%A5%E7%9C%8B%E7%A3%81%E7%9B%98%E4%BF%A1%E6%81%AF" class="hash-link" aria-label="查看磁盘信息的直接链接" title="查看磁盘信息的直接链接">​</a></h2>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">lsblk</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 输出如下</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">NAME   MAJ:MIN RM   SIZE RO TYPE MOUNTPOINTS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">loop0    7:0    0     4K  1 loop /snap/bare/5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">loop1    7:1    0 269.6M  1 loop /snap/firefox/4173</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">loop2    7:2    0  74.2M  1 loop /snap/core22/1380</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">loop3    7:3    0 505.1M  1 loop /snap/gnome-42-2204/176</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">loop4    7:4    0  10.7M  1 loop /snap/firmware-updater/127</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">loop5    7:5    0  10.3M  1 loop /snap/snap-store/1124</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">loop6    7:6    0  91.7M  1 loop /snap/gtk-common-themes/1535</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">loop7    7:7    0  38.7M  1 loop /snap/snapd/21465</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">loop8    7:8    0   476K  1 loop /snap/snapd-desktop-integration/157</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">loop9    7:9    0 137.3M  1 loop /snap/thunderbird/470</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sda      8:0    0 238.5G  0 disk</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├─sda1   8:1    0     1G  0 part /boot/efi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">└─sda2   8:2    0 237.4G  0 part /var/snap/firefox/common/host-hunspell</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                 /</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sdb      8:16   0 465.8G  0 disk</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">└─sdb1   8:17   0 465.8G  0 part</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="目录内容">目录内容<a href="https://sumingcheng.github.io/docs-hub/blog/linux-%E6%8C%82%E8%BD%BD%E7%A3%81%E7%9B%98%E7%9A%84%E6%AD%A5%E9%AA%A4#%E7%9B%AE%E5%BD%95%E5%86%85%EF%BF%BD%EF%BF%BD%E5%AE%B9" class="hash-link" aria-label="目录内容的直接链接" title="目录内容的直接链接">​</a></h2>
<p><code>/dev</code> 目录是 Linux 系统中的一个虚拟文件系统，用于表示设备文件。它包含了系统中所有设备的节点，比如硬盘、USB 设备、终端等。设备文件通常由操作系统在启动时自动生成，它们通过内核管理设备的输入和输出。</p>
<p>在 <code>lsblk</code> 输出中，<code>sdb</code> 表示第二个硬盘（第一个是 <code>sda</code>），而 <code>1</code> 表示这是第一个分区。<code>part</code> 代表该设备是一个分区，区别于 <code>disk</code>（整个磁盘）或 <code>loop</code>（环回设备）。所以，<code>sdb1</code> 是你硬盘 <code>sdb</code> 上的一个分区</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="手动挂载devsdb1-到mediahhd-目录">手动挂载/dev/sdb1 到/media/hhd 目录<a href="https://sumingcheng.github.io/docs-hub/blog/linux-%E6%8C%82%E8%BD%BD%E7%A3%81%E7%9B%98%E7%9A%84%E6%AD%A5%E9%AA%A4#%E6%89%8B%E5%8A%A8%E6%8C%82%E8%BD%BDdevsdb1-%E5%88%B0mediahhd-%E7%9B%AE%E5%BD%95" class="hash-link" aria-label="手动挂载/dev/sdb1 到/media/hhd 目录的直接链接" title="手动挂载/dev/sdb1 到/media/hhd 目录的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="创建挂载目录">创建挂载目录<a href="https://sumingcheng.github.io/docs-hub/blog/linux-%E6%8C%82%E8%BD%BD%E7%A3%81%E7%9B%98%E7%9A%84%E6%AD%A5%E9%AA%A4#%E5%88%9B%E5%BB%BA%E6%8C%82%E8%BD%BD%E7%9B%AE%E5%BD%95" class="hash-link" aria-label="创建挂载目录的直接链接" title="创建挂载目录的直接链接">​</a></h3>
<p>首先创建挂载点 <code>/media/hhd</code></p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo mkdir -p /media/hhd</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="挂载分区到该目录">挂载分区到该目录<a href="https://sumingcheng.github.io/docs-hub/blog/linux-%E6%8C%82%E8%BD%BD%E7%A3%81%E7%9B%98%E7%9A%84%E6%AD%A5%E9%AA%A4#%E6%8C%82%E8%BD%BD%E5%88%86%E5%8C%BA%E5%88%B0%E8%AF%A5%E7%9B%AE%E5%BD%95" class="hash-link" aria-label="挂载分区到该目录的直接链接" title="挂载分区到该目录的直接链接">​</a></h3>
<p>使用以下命令将分区 <code>/dev/sdb1</code> 挂载到 <code>/media/hhd</code></p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo mount /dev/sdb1 /media/hhd</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="验证挂载是否成功">验证挂载是否成功<a href="https://sumingcheng.github.io/docs-hub/blog/linux-%E6%8C%82%E8%BD%BD%E7%A3%81%E7%9B%98%E7%9A%84%E6%AD%A5%E9%AA%A4#%E9%AA%8C%E8%AF%81%E6%8C%82%E8%BD%BD%E6%98%AF%E5%90%A6%E6%88%90%E5%8A%9F" class="hash-link" aria-label="验证挂载是否成功的直接链接" title="验证挂载是否成功的直接链接">​</a></h3>
<p>您可以使用以下命令检查挂载情况</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">df -h | grep /media/hhd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> ⚡ root@smc-GK41  /  df -h | grep /media/hhd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/dev/sdb1       466G  292G  175G   63% /media/hhd</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>或者直接查看该目录中的内容</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ls /media/hhd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> ⚡ root@smc-GK41  /  ls /media/hhd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">'$RECYCLE.BIN'   Down   Downloads   GK41-Drivers   GK41-Drivers.zip  'System Volume Information'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> ⚡ root@smc-GK41  / </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="设置开机自动挂载">设置开机自动挂载<a href="https://sumingcheng.github.io/docs-hub/blog/linux-%E6%8C%82%E8%BD%BD%E7%A3%81%E7%9B%98%E7%9A%84%E6%AD%A5%E9%AA%A4#%E8%AE%BE%E7%BD%AE%E5%BC%80%E6%9C%BA%E8%87%AA%E5%8A%A8%E6%8C%82%E8%BD%BD" class="hash-link" aria-label="设置开机自动挂载的直接链接" title="设置开机自动挂载的直接链接">​</a></h2>
<p>如果您希望系统在每次启动时自动挂载该分区，可以将其添加到<code>/etc/fstab</code>文件中。设置自动挂载就不用设置上面的手动了</p>
<p>打开<code>/etc/fstab</code>文件进行编辑</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo nano /etc/fstab</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>在文件末尾添加以下行</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">/dev/sdb1  /media/hhd  auto  defaults  0  0</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>保存并关闭文件。</p>
<p>测试配置是否正确，可以使用以下命令检查是否有错误</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo mount -a</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>分区<code>/dev/sdb1</code>将挂载到<code>/media/hhd</code>目录下，并且在系统重启时也会自动挂载。</p>]]></content>
        <author>
            <name>素明诚</name>
            <uri>https://github.com/sumingcheng</uri>
        </author>
        <category label="开发工具与环境" term="开发工具与环境"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Go 面向接口和依赖注入的编写逻辑]]></title>
        <id>https://sumingcheng.github.io/docs-hub/blog/go-面向接口和依赖注入的编写逻辑</id>
        <link href="https://sumingcheng.github.io/docs-hub/blog/go-面向接口和依赖注入的编写逻辑"/>
        <updated>2024-11-02T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[已完成一个消息通知系统为例，这里自上而下的思考步骤如下]]></summary>
        <content type="html"><![CDATA[<p>已完成一个消息通知系统为例，这里自上而下的思考步骤如下</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="明确系统目标和功能">明确系统目标和功能<a href="https://sumingcheng.github.io/docs-hub/blog/go-%E9%9D%A2%E5%90%91%E6%8E%A5%E5%8F%A3%E5%92%8C%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E7%9A%84%E7%BC%96%E5%86%99%E9%80%BB%E8%BE%91#%E6%98%8E%E7%A1%AE%E7%B3%BB%E7%BB%9F%E7%9B%AE%E6%A0%87%E5%92%8C%E5%8A%9F%E8%83%BD" class="hash-link" aria-label="明确系统目标和功能的直接链接" title="明确系统目标和功能的直接链接">​</a></h3>
<p>目标：创建一个灵活的通知系统，能够通过不同的方式（如电子邮件和短信等）发送通知。</p>
<p>功能：系统应支持发送通知、管理配置、选择消息发送方式等。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="确定主要组件">确定主要组件<a href="https://sumingcheng.github.io/docs-hub/blog/go-%E9%9D%A2%E5%90%91%E6%8E%A5%E5%8F%A3%E5%92%8C%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E7%9A%84%E7%BC%96%E5%86%99%E9%80%BB%E8%BE%91#%E7%A1%AE%E5%AE%9A%E4%B8%BB%E8%A6%81%E7%BB%84%E4%BB%B6" class="hash-link" aria-label="确定主要组件的直接链接" title="确定主要组件的直接链接">​</a></h3>
<p><code>main</code>：入口点，负责配置和启动服务。</p>
<p><code>NotificationService</code>：负责发送通知的核心逻辑。</p>
<p><code>MessageSender</code> 接口及其实现：定义和实现不同的消息发送方式（如 <code>EmailSender</code> 和 <code>SmsSender</code>）。</p>
<p><code>Config</code> 结构体：管理和存储配置信息。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="定义核心接口">定义核心接口<a href="https://sumingcheng.github.io/docs-hub/blog/go-%E9%9D%A2%E5%90%91%E6%8E%A5%E5%8F%A3%E5%92%8C%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E7%9A%84%E7%BC%96%E5%86%99%E9%80%BB%E8%BE%91#%E5%AE%9A%E4%B9%89%E6%A0%B8%E5%BF%83%E6%8E%A5%E5%8F%A3" class="hash-link" aria-label="定义核心接口的直接链接" title="定义核心接口的直接链接">​</a></h3>
<p>确定 <code>MessageSender</code> 接口，它应该包含 <code>Send(message string) error</code> 方法。这个接口为后续具体实现提供了基础。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="实现具体功能">实现具体功能<a href="https://sumingcheng.github.io/docs-hub/blog/go-%E9%9D%A2%E5%90%91%E6%8E%A5%E5%8F%A3%E5%92%8C%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E7%9A%84%E7%BC%96%E5%86%99%E9%80%BB%E8%BE%91#%E5%AE%9E%E7%8E%B0%E5%85%B7%E4%BD%93%E5%8A%9F%E8%83%BD" class="hash-link" aria-label="实现具体功能的直接链接" title="实现具体功能的直接链接">​</a></h3>
<p>开始实现具体的功能模块</p>
<p><strong>配置管理</strong>：创建 <code>Config</code> 结构体和相应的方法来读取和管理配置信息。</p>
<p><strong>消息发送实现</strong>：实现 <code>EmailSender</code> 和 <code>SmsSender</code>，确保它们符合 <code>MessageSender</code> 接口。</p>
<p><strong>通知服务</strong>：实现 <code>NotificationService</code>，该服务使用 <code>MessageSender</code> 接口进行通知发送。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="实现主程序逻辑">实现主程序逻辑<a href="https://sumingcheng.github.io/docs-hub/blog/go-%E9%9D%A2%E5%90%91%E6%8E%A5%E5%8F%A3%E5%92%8C%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E7%9A%84%E7%BC%96%E5%86%99%E9%80%BB%E8%BE%91#%E5%AE%9E%E7%8E%B0%E4%B8%BB%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91" class="hash-link" aria-label="实现主程序逻辑的直接链接" title="实现主程序逻辑的直接链接">​</a></h3>
<p>在 <code>main</code> 函数中，根据配置选择消息发送者，创建 <code>NotificationService</code> 实例，并调用发送通知的方法。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="实现">实现<a href="https://sumingcheng.github.io/docs-hub/blog/go-%E9%9D%A2%E5%90%91%E6%8E%A5%E5%8F%A3%E5%92%8C%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E7%9A%84%E7%BC%96%E5%86%99%E9%80%BB%E8%BE%91#%E5%AE%9E%E7%8E%B0" class="hash-link" aria-label="实现的直接链接" title="实现的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="maingo">main.go<a href="https://sumingcheng.github.io/docs-hub/blog/go-%E9%9D%A2%E5%90%91%E6%8E%A5%E5%8F%A3%E5%92%8C%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E7%9A%84%E7%BC%96%E5%86%99%E9%80%BB%E8%BE%91#maingo" class="hash-link" aria-label="main.go的直接链接" title="main.go的直接链接">​</a></h3>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">package main</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import (</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	"log"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">func main() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	// 配置管理</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	config := Config{NotificationType: "email"} // 可以改为 "sms"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	// 根据配置创建消息发送者</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	sender, err := CreateMessageSender(config)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	if err != nil {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		log.Fatalf("Error creating message sender: %v", err)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	// 创建通知服务实例</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	notificationService := NewNotificationService(sender)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	// 发送通知</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	if err := notificationService.Notify("Hello via Notification Service"); err != nil {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		log.Fatalf("Error sending notification: %v", err)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	// 发送空消息，触发错误</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	if err := notificationService.Notify(""); err != nil {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		log.Printf("Expected error: %v", err)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="configgo">config.go<a href="https://sumingcheng.github.io/docs-hub/blog/go-%E9%9D%A2%E5%90%91%E6%8E%A5%E5%8F%A3%E5%92%8C%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E7%9A%84%E7%BC%96%E5%86%99%E9%80%BB%E8%BE%91#configgo" class="hash-link" aria-label="config.go的直接链接" title="config.go的直接链接">​</a></h3>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">package main</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// Config 用于管理配置信息</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">type Config struct {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	NotificationType string</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="message_sendergo">message_sender.go<a href="https://sumingcheng.github.io/docs-hub/blog/go-%E9%9D%A2%E5%90%91%E6%8E%A5%E5%8F%A3%E5%92%8C%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E7%9A%84%E7%BC%96%E5%86%99%E9%80%BB%E8%BE%91#message_sendergo" class="hash-link" aria-label="message_sender.go的直接链接" title="message_sender.go的直接链接">​</a></h3>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">package main</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import "errors"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// MessageSender 是一个接口，定义了发送消息的方法</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">type MessageSender interface {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	Send(message string) error</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// CreateMessageSender 根据配置创建对应的 MessageSender 实现</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">func CreateMessageSender(config Config) (MessageSender, error) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	switch config.NotificationType {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	case "email":</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		return &amp;EmailSender{}, nil</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	case "sms":</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		return &amp;SmsSender{}, nil</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	default:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		return nil, errors.New("unsupported notification type")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="notification_servicego">notification_service.go<a href="https://sumingcheng.github.io/docs-hub/blog/go-%E9%9D%A2%E5%90%91%E6%8E%A5%E5%8F%A3%E5%92%8C%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E7%9A%84%E7%BC%96%E5%86%99%E9%80%BB%E8%BE%91#notification_servicego" class="hash-link" aria-label="notification_service.go的直接链接" title="notification_service.go的直接链接">​</a></h3>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">package main</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import (</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	"errors"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// NotificationService 是一个结构体，包含了一个 MessageSender 类型的字段 sender</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">type NotificationService struct {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	sender MessageSender</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// NewNotificationService 是一个构造函数，用于创建 NotificationService 实例</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">func NewNotificationService(sender MessageSender) *NotificationService {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	return &amp;NotificationService{sender: sender}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// Notify 是 NotificationService 结构体的一个方法，用于发送通知</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">func (n *NotificationService) Notify(message string) error {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	if message == "" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		return errors.New("message cannot be empty")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	return n.sender.Send(message)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="sendersgo">senders.go<a href="https://sumingcheng.github.io/docs-hub/blog/go-%E9%9D%A2%E5%90%91%E6%8E%A5%E5%8F%A3%E5%92%8C%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E7%9A%84%E7%BC%96%E5%86%99%E9%80%BB%E8%BE%91#sendersgo" class="hash-link" aria-label="senders.go的直接链接" title="senders.go的直接链接">​</a></h3>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">package main</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import (</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	"log"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// EmailSender 发送电子邮件</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">type EmailSender struct{}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// Send 实现了 MessageSender 接口</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">func (e *EmailSender) Send(message string) error {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	// 模拟发送电子邮件的逻辑</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	log.Printf("Sending email: %s", message)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	return nil // 假设发送成功</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// SmsSender 发送短信</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">type SmsSender struct{}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// Send 实现了 MessageSender 接口</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">func (s *SmsSender) Send(message string) error {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	// 模拟发送短信的逻辑</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	log.Printf("Sending SMS: %s", message)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	return nil // 假设发送成功</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>素明诚</name>
            <uri>https://github.com/sumingcheng</uri>
        </author>
        <category label="性能优化和架构" term="性能优化和架构"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[解决 Vue 中的事件冒泡问题]]></title>
        <id>https://sumingcheng.github.io/docs-hub/blog/解决-vue-中的事件冒泡问题</id>
        <link href="https://sumingcheng.github.io/docs-hub/blog/解决-vue-中的事件冒泡问题"/>
        <updated>2024-10-29T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[在开发 Vue 应用时，经常需要处理事件冒泡问题，特别是在多层嵌套的组件结构中。以下是两种有效的方法来阻止事件冒泡，确保组件行为按预期执行。]]></summary>
        <content type="html"><![CDATA[<p>在开发 Vue 应用时，经常需要处理事件冒泡问题，特别是在多层嵌套的组件结构中。以下是两种有效的方法来阻止事件冒泡，确保组件行为按预期执行。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="使用-vue-的stop-修饰符">使用 Vue 的.stop 修饰符<a href="https://sumingcheng.github.io/docs-hub/blog/%E8%A7%A3%E5%86%B3-vue-%E4%B8%AD%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%86%92%E6%B3%A1%E9%97%AE%E9%A2%98#%E4%BD%BF%E7%94%A8-vue-%E7%9A%84stop-%E4%BF%AE%E9%A5%B0%E7%AC%A6" class="hash-link" aria-label="使用 Vue 的.stop 修饰符的直接链接" title="使用 Vue 的.stop 修饰符的直接链接">​</a></h2>
<p>Vue 提供了 <code>.stop</code> 修饰符，这是一个简洁且直接的方法来阻止事件冒泡。使用 <code>.stop</code> 修饰符，可以直接在模板的事件绑定上操作，无需修改 JavaScript 逻辑。这种方法非常适合大多数场景，尤其是在简单的父子组件通信中。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="实现示例">实现示例<a href="https://sumingcheng.github.io/docs-hub/blog/%E8%A7%A3%E5%86%B3-vue-%E4%B8%AD%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%86%92%E6%B3%A1%E9%97%AE%E9%A2%98#%E5%AE%9E%E7%8E%B0%E7%A4%BA%E4%BE%8B" class="hash-link" aria-label="实现示例的直接链接" title="实现示例的直接链接">​</a></h3>
<p>在 Vue 模板中，将 <code>.stop</code> 修饰符添加到事件绑定上，如下所示</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&lt;button @click.stop="toggleDescription"&gt;展开/收起&lt;/button&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>在这个例子中，当点击按钮时，<code>.stop</code> 修饰符会阻止事件继续向上冒泡至父元素。这样可以避免触发父元素或其他上层元素的事件监听器。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="在事件处理函数中调用-eventstoppropagation">在事件处理函数中调用 event.stopPropagation()<a href="https://sumingcheng.github.io/docs-hub/blog/%E8%A7%A3%E5%86%B3-vue-%E4%B8%AD%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%86%92%E6%B3%A1%E9%97%AE%E9%A2%98#%E5%9C%A8%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86%E5%87%BD%E6%95%B0%E4%B8%AD%E8%B0%83%E7%94%A8-eventstoppropagation" class="hash-link" aria-label="在事件处理函数中调用 event.stopPropagation()的直接链接" title="在事件处理函数中调用 event.stopPropagation()的直接链接">​</a></h2>
<p>如果需要更精细的控制，或者想在执行某些条件逻辑后才决定是否阻止冒泡，可以在事件处理函数中调用 <code>event.stopPropagation()</code> 方法。这种方法提供了更高的灵活性，允许开发者根据运行时的条件来动态决定是否阻止事件冒泡。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="实现示例-1">实现示例<a href="https://sumingcheng.github.io/docs-hub/blog/%E8%A7%A3%E5%86%B3-vue-%E4%B8%AD%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%86%92%E6%B3%A1%E9%97%AE%E9%A2%98#%E5%AE%9E%E7%8E%B0%E7%A4%BA%E4%BE%8B-1" class="hash-link" aria-label="实现示例的直接链接" title="实现示例的直接链接">​</a></h3>
<p>首先，在方法中接收事件对象，然后调用 <code>stopPropagation()</code> 方法</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">const toggleDescription = (event) =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  event.stopPropagation();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  // 可以在这里添加其他逻辑</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  isExpanded.value = !isExpanded.value;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>然后，在模板中传递事件对象到该方法</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&lt;button @click="toggleDescription($event)"&gt;展开/收起&lt;/button&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这种方式允许在函数内部根据具体的逻辑来决定是否停止事件的进一步传播。例如，可以基于用户的权限级别或应用的状态来决定是否阻止冒泡。</p>]]></content>
        <author>
            <name>素明诚</name>
            <uri>https://github.com/sumingcheng</uri>
        </author>
        <category label="前端" term="前端"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Linux 不输入密码获取 root 权限]]></title>
        <id>https://sumingcheng.github.io/docs-hub/blog/linux-不输入密码获取-root-权限</id>
        <link href="https://sumingcheng.github.io/docs-hub/blog/linux-不输入密码获取-root-权限"/>
        <updated>2024-10-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[修改 sudoers 文件以免密码执行 sudo（推荐）]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="修改-sudoers-文件以免密码执行-sudo推荐">修改 sudoers 文件以免密码执行 sudo（推荐）<a href="https://sumingcheng.github.io/docs-hub/blog/linux-%E4%B8%8D%E8%BE%93%E5%85%A5%E5%AF%86%E7%A0%81%E8%8E%B7%E5%8F%96-root-%E6%9D%83%E9%99%90#%E4%BF%AE%E6%94%B9-sudoers-%E6%96%87%E4%BB%B6%E4%BB%A5%E5%85%8D%E5%AF%86%E7%A0%81%E6%89%A7%E8%A1%8C-sudo%E6%8E%A8%E8%8D%90" class="hash-link" aria-label="修改 sudoers 文件以免密码执行 sudo（推荐）的直接链接" title="修改 sudoers 文件以免密码执行 sudo（推荐）的直接链接">​</a></h2>
<p>可以通过修改 <code>sudoers</code> 文件为特定用户配置无密码 <code>sudo</code> 权限</p>
<p>使用 <code>visudo</code> 命令安全编辑 <code>sudoers</code> 文件</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo visudo</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>在文件中添加或修改以下行，替换 <code>your_username</code> 为实际的用户名</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">your_username ALL=(ALL) NOPASSWD: ALL</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>保存并退出编辑器。</p>
<p>这样配置后，用户在执行 <code>sudo</code> 命令时无需输入密码，例如使用 <code>sudo su</code> 可以直接切换到 <code>root</code> 用户。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="设置-root-用户的自动登录">设置 root 用户的自动登录<a href="https://sumingcheng.github.io/docs-hub/blog/linux-%E4%B8%8D%E8%BE%93%E5%85%A5%E5%AF%86%E7%A0%81%E8%8E%B7%E5%8F%96-root-%E6%9D%83%E9%99%90#%E8%AE%BE%E7%BD%AE-root-%E7%94%A8%E6%88%B7%E7%9A%84%E8%87%AA%E5%8A%A8%E7%99%BB%E5%BD%95" class="hash-link" aria-label="设置 root 用户的自动登录的直接链接" title="设置 root 用户的自动登录的直接链接">​</a></h2>
<p>对于部分 Linux 发行版，可以设置在启动时自动登录 <code>root</code> 用户</p>
<p><strong>对于使用 SysVinit 的系统，编辑 <code>/etc/inittab</code> 文件</strong></p>
<p>打开 <code>/etc/inittab</code>，找到以下行</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">1:2345:respawn:/sbin/getty 38400 tty1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>修改为</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">1:2345:respawn:/sbin/getty --autologin root 38400 tty1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>对于使用 <code>systemd</code> 的系统，修改 <code>getty</code> 服务配置</strong></p>
<p>创建覆盖文件</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo mkdir -p /etc/systemd/system/getty@tty1.service.d/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo nano /etc/systemd/system/getty@tty1.service.d/override.conf</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>添加以下内容</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[Service]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ExecStart=</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ExecStart=-/sbin/agetty --autologin root --noclear %I $TERM</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>刷新 <code>systemd</code> 配置并重启服务</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo systemctl daemon-reload</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo systemctl restart getty@tty1.service</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="禁用-root-用户密码">禁用 root 用户密码<a href="https://sumingcheng.github.io/docs-hub/blog/linux-%E4%B8%8D%E8%BE%93%E5%85%A5%E5%AF%86%E7%A0%81%E8%8E%B7%E5%8F%96-root-%E6%9D%83%E9%99%90#%E7%A6%81%E7%94%A8-root-%E7%94%A8%E6%88%B7%E5%AF%86%E7%A0%81" class="hash-link" aria-label="禁用 root 用户密码的直接链接" title="禁用 root 用户密码的直接链接">​</a></h2>
<p><strong>不建议此方法</strong>，但也可以通过删除 <code>root</code> 用户的密码实现无密码登录</p>
<p>使用以下命令删除 <code>root</code> 用户密码</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo passwd -d root</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="使用-ssh-公钥认证">使用 ssh 公钥认证<a href="https://sumingcheng.github.io/docs-hub/blog/linux-%E4%B8%8D%E8%BE%93%E5%85%A5%E5%AF%86%E7%A0%81%E8%8E%B7%E5%8F%96-root-%E6%9D%83%E9%99%90#%E4%BD%BF%E7%94%A8-ssh-%E5%85%AC%E9%92%A5%E8%AE%A4%E8%AF%81" class="hash-link" aria-label="使用 ssh 公钥认证的直接链接" title="使用 ssh 公钥认证的直接链接">​</a></h2>
<p>通过配置 <code>ssh</code> 允许使用公钥进行身份验证，从而无需密码直接登录到 <code>root</code> 用户</p>
<p>确保 <code>ssh</code> 服务的配置文件 <code>/etc/ssh/sshd_config</code> 中启用了公钥认证</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">PubkeyAuthentication yes</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>在 <code>root</code> 用户的<code>home</code>目录下，将用户的公钥添加到 <code>~/.ssh/authorized_keys</code> 文件中。</p>
<p>确保客户端的私钥安全，且不被未授权用户访问。</p>]]></content>
        <author>
            <name>素明诚</name>
            <uri>https://github.com/sumingcheng</uri>
        </author>
        <category label="开发工具与环境" term="开发工具与环境"/>
    </entry>
</feed>